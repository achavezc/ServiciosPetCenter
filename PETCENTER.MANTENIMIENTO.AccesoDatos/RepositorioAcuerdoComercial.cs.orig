using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using TRAMARSA.AGMA.ACUERDOCOMERCIAL.DTO.Tramarsa;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.DTO.AcuerdosComerciales;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Framework;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.DetalleCatalogo;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.GrupoPuertoExterno;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.DetalleGrupoPuertoExterno;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.Tarifa;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Sucursal;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.TerminalPortuario;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Linea;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Moneda;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Nave;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Tarifa;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.BL;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Cliente;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Puerto;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Core;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa.Servicio;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.AcuerdoComercial;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.TipoContenedorExterno;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.TipoContenedor;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.ClaseContenedor;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Tramarsa;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.Constantes;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.PesoVariable;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.Notificacion;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.CatalogoTablas;
using TRAMARSA.AGMA.ACUERDOCOMERCIAL.Entidades.AcuerdosComerciales.Puerto;

namespace TRAMARSA.AGMA.ACUERDOCOMERCIAL.AccesoDatos
{
    public class RepositorioAcuerdoComercial : RepositorioBase<RepositorioAcuerdoComercial>
    {
        public RepositorioAcuerdoComercial(ContextoParaBaseDatos contexto) : base(contexto) { }

        public List<SucursalBE> ConsultaSucursales()
        {
            List<SucursalBE> lstSucursales = new List<SucursalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_SUCURSALES", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            SucursalBE sucursal = new SucursalBE()
                            {
                                Nombre = dr.IsDBNull(dr.GetOrdinal("NombreSucursal")) ? "" : dr.GetString(dr.GetOrdinal("NombreSucursal")).Trim(),
                                Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim(),
                                Puerto = dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto")).Trim()
                            };

                            lstSucursales.Add(sucursal);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstSucursales;

        }

        public List<TerminalPortuarioBE> ConsultarTerminalPortuario()
        {
            List<TerminalPortuarioBE> lstTerminalesPortuarios = new List<TerminalPortuarioBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_TERMINAL_PORTUARIO", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TerminalPortuarioBE terminalPortuario = new TerminalPortuarioBE()
                            {
                                CodigoAlmacen = dr.IsDBNull(dr.GetOrdinal("CodigoAlmacen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoAlmacen")).Trim(),
                                NombreAlmacen = dr.IsDBNull(dr.GetOrdinal("NombreAlmacen")) ? "" : dr.GetString(dr.GetOrdinal("NombreAlmacen")).Trim(),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim()
                            };

                            lstTerminalesPortuarios.Add(terminalPortuario);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstTerminalesPortuarios;

        }


        public List<LineaBE> ConsultarLineas()
        {
            List<LineaBE> lstLineas = new List<LineaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_LINEAS", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            LineaBE linea = new LineaBE()
                            {
                                Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim(),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("NombreLinea")) ? "" : dr.GetString(dr.GetOrdinal("NombreLinea")).Trim(),
                            };

                            lstLineas.Add(linea);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstLineas;

        }

        public List<MonedaBE> ConsultarMoneda()
        {
            List<MonedaBE> lstMonedas = new List<MonedaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_MONEDAS", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            MonedaBE moneda = new MonedaBE()
                            {
                                Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("Abreviatura")) ? "" : dr.GetString(dr.GetOrdinal("Abreviatura")).Trim(),
                                CodigoPais = dr.IsDBNull(dr.GetOrdinal("CodigoPais")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPais")).Trim()
                            };

                            lstMonedas.Add(moneda);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstMonedas;

        }

        public List<NaveBE> ConsultarNave(ConsultaNavesBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<NaveBE> lstNaves = new List<NaveBE>();
            List<DetalleArriboNaveBE> lstDetalleArriboNaveBE = new List<DetalleArriboNaveBE>();


            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;


                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodNav", String.IsNullOrEmpty(request.Codigo) ? string.Empty : request.Codigo);
                parametrosIn.Add("@NomNav", String.IsNullOrEmpty(request.Nombre) ? string.Empty : request.Nombre);
                parametrosIn.Add("@NumVia", String.IsNullOrEmpty(request.NumeroViaje) ? string.Empty : request.NumeroViaje);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);



                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_NAVES", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            NaveBE nave = new NaveBE();
                            nave.Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoNave")) ? "" : dr.GetString(dr.GetOrdinal("CodigoNave")).Trim();
                            nave.Nombre = dr.IsDBNull(dr.GetOrdinal("NombreNave")) ? "" : dr.GetString(dr.GetOrdinal("NombreNave")).Trim();
                            nave.NumeroViaje = dr.IsDBNull(dr.GetOrdinal("NumeroViaje")) ? "" : dr.GetString(dr.GetOrdinal("NumeroViaje")).Trim();

                            lstNaves.Add(nave);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            DetalleArriboNaveBE DetalleArriboNave = new DetalleArriboNaveBE()
                            {
                                CodigoNave = dr.IsDBNull(dr.GetOrdinal("CodigoNave")) ? "" : dr.GetString(dr.GetOrdinal("CodigoNave")).Trim(),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim(),
                                FechaArribo = dr.IsDBNull(dr.GetOrdinal("FechaArribo")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaArribo")),
                                NumeroViaje = dr.IsDBNull(dr.GetOrdinal("NumeroViaje")) ? "" : dr.GetString(dr.GetOrdinal("NumeroViaje")).Trim()
                            };

                            lstDetalleArriboNaveBE.Add(DetalleArriboNave);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    foreach (var nave in lstNaves)
                    {
                        nave.DetalleArriboNaveList = lstDetalleArriboNaveBE.Where(x => x.CodigoNave == nave.Codigo).ToList();
                    }


                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());

                }


            }

            return lstNaves;

        }

        public List<TarifaBE> ConsultarTarifa(ConsultaTarifasBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<TarifaBE> lstTarifas = new List<TarifaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoLinea", String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea);
                parametrosIn.Add("@CodRegimen", String.IsNullOrEmpty(request.CodigoRegimen) ? string.Empty : request.CodigoRegimen);
                parametrosIn.Add("@CodConcepto", String.IsNullOrEmpty(request.CodigoConcepto) ? string.Empty : request.CodigoConcepto);
                parametrosIn.Add("@CodTarifa", String.IsNullOrEmpty(request.CodigoTarifa) ? string.Empty : request.CodigoTarifa);
                parametrosIn.Add("@DescripcionTarifa", String.IsNullOrEmpty(request.DescripcionTarifa) ? string.Empty : request.DescripcionTarifa);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_TARIFAS", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaBE tarifa = new TarifaBE()
                            {
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                NombreConcepto = dr.IsDBNull(dr.GetOrdinal("NombreConcepto")) ? "" : dr.GetString(dr.GetOrdinal("NombreConcepto")).Trim(),
                                AbreviacionConcepto = dr.IsDBNull(dr.GetOrdinal("AbreviacionConcepto")) ? "" : dr.GetString(dr.GetOrdinal("AbreviacionConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim(),
                                NombreTarifa = dr.IsDBNull(dr.GetOrdinal("NombreTarifa")) ? "" : dr.GetString(dr.GetOrdinal("NombreTarifa")).Trim(),
                                CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim(),
                                CodigoUnidadCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoUnidadCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUnidadCalculo")).Trim()
                            };

                            lstTarifas.Add(tarifa);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }

            }

            return lstTarifas;

        }



        public List<DistribucionTarifaBE> ConsultarDistribucionTarifa(ConsultaDistribucionTarifasBE request)
        {
            List<DistribucionTarifaBE> lstDistribucionTarifas = new List<DistribucionTarifaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametros = new Dictionary<string, object>();
                parametros.Add("@CodigoConcepto", String.IsNullOrEmpty(request.CodigoConcepto) ? string.Empty : request.CodigoConcepto);
                parametros.Add("@CodigoTarifa", String.IsNullOrEmpty(request.CodigoTarifa) ? string.Empty : request.CodigoTarifa);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_DISTRIBUCION_TARIFAS", conexion, parametros, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DistribucionTarifaBE disttarifa = new DistribucionTarifaBE()
                            {
                                Concepto = dr.IsDBNull(dr.GetOrdinal("Concepto")) ? "" : dr.GetString(dr.GetOrdinal("Concepto")).Trim(),
                                CodigoDistribucionTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoDistribucionTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDistribucionTarifa")).Trim(),
                                CodTarifa = dr.IsDBNull(dr.GetOrdinal("CodTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodTarifa")).Trim(),
                                NumeroDetalle = Convert.ToInt32(dr.GetValue(dr.GetOrdinal("NumeroDetalle"))),
                                TipoTarifa = dr.IsDBNull(dr.GetOrdinal("TipoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("TipoTarifa")).Trim(),
                                MontoBase = dr.GetDecimal(dr.GetOrdinal("MontoBase")),
                                Cuenta = dr.IsDBNull(dr.GetOrdinal("Cuenta")) ? "" : dr.GetString(dr.GetOrdinal("Cuenta")).Trim(),
                                Porcentaje = dr.GetDecimal(dr.GetOrdinal("Porcentaje")),
                                MontoBruto = dr.GetDecimal(dr.GetOrdinal("MontoBruto")),
                                MontoIGV = dr.GetDecimal(dr.GetOrdinal("MontoIGV")),
                                MontoNeto = dr.GetDecimal(dr.GetOrdinal("MontoNeto")),
                                TipoCta = dr.IsDBNull(dr.GetOrdinal("TipoCta")) ? "" : dr.GetString(dr.GetOrdinal("TipoCta")).Trim()
                            };

                            lstDistribucionTarifas.Add(disttarifa);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstDistribucionTarifas;

        }

        public List<PuertoBE> ConsultarPuertos(ConsultaPuertosBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<PuertoBE> lstPuertos = new List<PuertoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoPuerto", String.IsNullOrEmpty(request.CodigoPuerto) ? string.Empty : request.CodigoPuerto);
                parametrosIn.Add("@NombrePuerto", String.IsNullOrEmpty(request.NombrePuerto) ? string.Empty : request.NombrePuerto);
                parametrosIn.Add("@CodigoPais", String.IsNullOrEmpty(request.CodigoPais) ? string.Empty : request.CodigoPais);
                
                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_PUERTOS", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            PuertoBE puerto = new PuertoBE()
                            {
                                Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto")).Trim(),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("NombrePuerto")) ? "" : dr.GetString(dr.GetOrdinal("NombrePuerto")).Trim(),
                                CodigoPais = dr.IsDBNull(dr.GetOrdinal("CodigoPais")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPais")).Trim()
                            };

                            lstPuertos.Add(puerto);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstPuertos;
        }

        public List<BLDocumentoOrigenBE> ConsultarBL_DocumentoOrigen(ConsultaBLDocumentoOrigenBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<BLDocumentoOrigenBE> lstDocumentosOrigen = new List<BLDocumentoOrigenBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodNav", String.IsNullOrEmpty(request.CodNave) ? string.Empty : request.CodNave);
                parametrosIn.Add("@NumVia", String.IsNullOrEmpty(request.NumViaje) ? string.Empty : request.NumViaje);
                parametrosIn.Add("@PtoOri", String.IsNullOrEmpty(request.PuertoOrigen) ? string.Empty : request.PuertoOrigen);
                parametrosIn.Add("@PtoEmb", String.IsNullOrEmpty(request.PuertoEmbarque) ? string.Empty : request.PuertoEmbarque);
                parametrosIn.Add("@PtoDes", String.IsNullOrEmpty(request.PuertoDesembarque) ? string.Empty : request.PuertoDesembarque);
                parametrosIn.Add("@DesFin", String.IsNullOrEmpty(request.DestinoFinal) ? string.Empty : request.DestinoFinal);
                parametrosIn.Add("@CodLin", String.IsNullOrEmpty(request.CodLinea) ? string.Empty : request.CodLinea);
                parametrosIn.Add("@NroBL", String.IsNullOrEmpty(request.NroBL) ? string.Empty : request.NroBL);
                parametrosIn.Add("@TipBL", String.IsNullOrEmpty(request.TipoBL) ? string.Empty : request.TipoBL);
                parametrosIn.Add("@CodCtn", String.IsNullOrEmpty(request.CodContenedor) ? string.Empty : request.CodContenedor);
                parametrosIn.Add("@TipoDocumento", String.IsNullOrEmpty(request.TipoDocumento) ? string.Empty : request.TipoDocumento);
                parametrosIn.Add("@NroBkn", String.IsNullOrEmpty(request.NroBkn) ? string.Empty : request.NroBkn);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_BLS", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            BLDocumentoOrigenBE documento = new BLDocumentoOrigenBE();
                            
                                documento.CodNave = dr.IsDBNull(dr.GetOrdinal("CodNave")) ? "" : dr.GetString(dr.GetOrdinal("CodNave")).Trim();
                                documento.Nave = dr.IsDBNull(dr.GetOrdinal("Nave")) ? "" : dr.GetString(dr.GetOrdinal("Nave")).Trim();
                                documento.NumViaje = dr.IsDBNull(dr.GetOrdinal("NumViaje")) ? "" : dr.GetString(dr.GetOrdinal("NumViaje")).Trim();
                                documento.PuertoOrigen = dr.IsDBNull(dr.GetOrdinal("PuertoOrigen")) ? "" : dr.GetString(dr.GetOrdinal("PuertoOrigen")).Trim();
                                documento.PuertoEmbarque = dr.IsDBNull(dr.GetOrdinal("PuertoEmbarque")) ? "" : dr.GetString(dr.GetOrdinal("PuertoEmbarque")).Trim();
                                documento.PuertoDesembarque = dr.IsDBNull(dr.GetOrdinal("PuertoDesembarque")) ? "" : dr.GetString(dr.GetOrdinal("PuertoDesembarque")).Trim();
                                documento.DestinoFinal = dr.IsDBNull(dr.GetOrdinal("DestinoFinal")) ? "" : dr.GetString(dr.GetOrdinal("DestinoFinal")).Trim();
                                documento.CodLinea = dr.IsDBNull(dr.GetOrdinal("CodLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodLinea")).Trim();
                                documento.NroBL = dr.IsDBNull(dr.GetOrdinal("NroBL")) ? "" : dr.GetString(dr.GetOrdinal("NroBL")).Trim();
                                documento.TipoBL = dr.IsDBNull(dr.GetOrdinal("TipoBL")) ? "" : dr.GetString(dr.GetOrdinal("TipoBL")).Trim();
                                documento.Consignatario = dr.IsDBNull(dr.GetOrdinal("Consignatario")) ? "" : dr.GetString(dr.GetOrdinal("Consignatario")).Trim();
                                documento.DireccionConsignatario = dr.IsDBNull(dr.GetOrdinal("DireccionConsignatario")) ? "" : dr.GetString(dr.GetOrdinal("DireccionConsignatario")).Trim();
                                documento.CodigoEmbarque = dr.IsDBNull(dr.GetOrdinal("CodigoEmbarque")) ? "" : dr.GetString(dr.GetOrdinal("CodigoEmbarque")).Trim();
                                documento.CodigoServicio = dr.IsDBNull(dr.GetOrdinal("CodigoServicio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicio")).Trim();
                                documento.Fec_BL = dr.IsDBNull(dr.GetOrdinal("Fec_BL")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("Fec_BL"));
                                documento.CodigoContenedor = dr.IsDBNull(dr.GetOrdinal("CodContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodContenedor")).Trim();
                                documento.TipoDocumento = dr.IsDBNull(dr.GetOrdinal("TipoDocumento")) ? "" : dr.GetString(dr.GetOrdinal("TipoDocumento")).Trim();
                                documento.NroBkn = dr.IsDBNull(dr.GetOrdinal("NroBkn")) ? "" : dr.GetString(dr.GetOrdinal("NroBkn")).Trim();
                                documento.NumeroDocumentoBLMaster = dr.IsDBNull(dr.GetOrdinal("NroBLMaster")) ? "" : dr.GetString(dr.GetOrdinal("NroBLMaster")).Trim();
                                documento.CodigoNotificante = dr.IsDBNull(dr.GetOrdinal("CodigoNotificante")) ? "" : dr.GetString(dr.GetOrdinal("CodigoNotificante")).Trim();
                                documento.Notificante = dr.IsDBNull(dr.GetOrdinal("Notificante")) ? "" : dr.GetString(dr.GetOrdinal("Notificante")).Trim();
                                documento.Embarcador = dr.IsDBNull(dr.GetOrdinal("Embarcador")) ? "" : dr.GetString(dr.GetOrdinal("Embarcador")).Trim();  

                            lstDocumentosOrigen.Add(documento);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstDocumentosOrigen;

        }

        //public List<ClienteBE> ConsultarCliente(ConsultaClienteBE request, out int totalRegistros, out int cantidadPaginas)
        //{
        //    List<ClienteBE> lstClientes = new List<ClienteBE>();

        //    using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
        //    {

        //        Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
        //        Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
        //        int totRegs = 0;
        //        int cantRegs = 0;

        //        parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
        //        parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
        //        parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
        //        parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
        //        parametrosIn.Add("@CodigoRol", String.IsNullOrEmpty(request.CodigoRol) ? string.Empty : request.CodigoRol);
        //        parametrosIn.Add("@CodigoClienteSAP", String.IsNullOrEmpty(request.CodigoCliente) ? string.Empty : request.CodigoCliente);
        //        parametrosIn.Add("@Nombre", String.IsNullOrEmpty(request.Nombre) ? string.Empty : request.Nombre);
        //        parametrosIn.Add("@Ruc", String.IsNullOrEmpty(request.Ruc) ? string.Empty : request.Ruc);
        //        parametrosIn.Add("@Dni", String.IsNullOrEmpty(request.Dni) ? string.Empty : request.Dni);

        //        parametrosOut.Add("@TotalRegistros", totRegs);
        //        parametrosOut.Add("@CantidadPaginas", cantRegs);

        //        using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_CLIENTES", conexion, parametrosIn, true, parametrosOut))
        //        {
        //            using (IDataReader dr = cmd.ExecuteReader())
        //            {
        //                while (dr.Read())
        //                {
        //                    ClienteBE cliente = new ClienteBE()
        //                    {
        //                        CodigoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCliente")).Trim(),
        //                        CodigoClienteSAP = dr.IsDBNull(dr.GetOrdinal("CodigoClienteSAP")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClienteSAP")).Trim(),
        //                        Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")).Trim(),
        //                        Direccion = dr.IsDBNull(dr.GetOrdinal("Direccion")) ? "" : dr.GetString(dr.GetOrdinal("Direccion")).Trim(),
        //                        Ruc = dr.IsDBNull(dr.GetOrdinal("RUC")) ? "" : dr.GetString(dr.GetOrdinal("RUC")).Trim(),
        //                        Distrito = dr.IsDBNull(dr.GetOrdinal("Distrito")) ? "" : dr.GetString(dr.GetOrdinal("Distrito")).Trim(),
        //                        Provincia = dr.IsDBNull(dr.GetOrdinal("Provincia")) ? "" : dr.GetString(dr.GetOrdinal("Provincia")).Trim(),
        //                        Pais = dr.IsDBNull(dr.GetOrdinal("Pais")) ? "" : dr.GetString(dr.GetOrdinal("Pais")).Trim(),
        //                        CodigoRolSap = dr.IsDBNull(dr.GetOrdinal("CodigoRolSap")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRolSap")).Trim()
        //                    };

        //                    lstClientes.Add(cliente);
        //                }
        //                SqlHelper.CloseConnection(conexion);
        //            }

        //            totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
        //            cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
        //        }
        //    }

        //    return lstClientes;
        //}

        public List<DetalleCatalogoBE> ConsultarDetalleCatalogo()
        {
            List<DetalleCatalogoBE> lstDetalleCatalogos = new List<DetalleCatalogoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_DETALLECATALOGO", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleCatalogoBE nave = new DetalleCatalogoBE()
                            {
                                IdCatalogo = dr.IsDBNull(dr.GetOrdinal("IdCatalogo")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("IdCatalogo")),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")).Trim(),
                                Codigo = dr.IsDBNull(dr.GetOrdinal("Codigo")) ? "" : dr.GetString(dr.GetOrdinal("Codigo")).Trim(),
                                Label = dr.IsDBNull(dr.GetOrdinal("Label")) ? "" : dr.GetString(dr.GetOrdinal("Label")).Trim(),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim(),
                                Mnemonico = dr.IsDBNull(dr.GetOrdinal("Mnemonico")) ? "" : dr.GetString(dr.GetOrdinal("Mnemonico")).Trim(),
                                Valor1 = dr.IsDBNull(dr.GetOrdinal("Val1")) ? "" : dr.GetString(dr.GetOrdinal("Val1")).Trim(),
                                Valor2 = dr.IsDBNull(dr.GetOrdinal("Val2")) ? "" : dr.GetString(dr.GetOrdinal("Val2")).Trim()
                            };

                            lstDetalleCatalogos.Add(nave);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstDetalleCatalogos;

        }

        public List<GrupoPuertoExternoBE> ConsultarGrupoPuertoExterno(ConsultaGrupoPuertoExternoBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<GrupoPuertoExternoBE> lstGrupoPuertoExterno = new List<GrupoPuertoExternoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoGrupoPuerto", request.CodigoGrupoPuerto == null ? 0 : request.CodigoGrupoPuerto);
                parametrosIn.Add("@NombreGrupoPuerto", String.IsNullOrEmpty(request.NombreGrupoPuerto) ? string.Empty : request.NombreGrupoPuerto);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_GRUPOPUERTOEXTERNO", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            GrupoPuertoExternoBE grupopuertoexterno = new GrupoPuertoExternoBE()
                            {
                                CodigoGrupoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoGrupoPuerto")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoGrupoPuerto")),
                                NombreGrupoPuerto = dr.IsDBNull(dr.GetOrdinal("NombreGrupoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("NombreGrupoPuerto")).Trim(),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                EstadoRegistro = dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstGrupoPuertoExterno.Add(grupopuertoexterno);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }


                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstGrupoPuertoExterno;
        }

        public List<DetalleGrupoPuertoExternoBE> ConsultarDetalleGrupoPuertoExterno(ConsultaDetalleGrupoPuertoExternoBE request)
        {
            List<DetalleGrupoPuertoExternoBE> lstDetalleGrupoPuertoExterno = new List<DetalleGrupoPuertoExternoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametros = new Dictionary<string, object>();
                parametros.Add("@CodigoGrupoPuerto", request.CodigoGrupoPuerto == null ? 0 : request.CodigoGrupoPuerto);
                parametros.Add("@CodigoGrupoPuertoDetalle", request.CodigoGrupoPuertoDetalle == null ? 0 : request.CodigoGrupoPuertoDetalle);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_DETALLEGRUPOPUERTOEXTERNO", conexion, parametros, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleGrupoPuertoExternoBE detgrupopuertoexterno = new DetalleGrupoPuertoExternoBE()
                            {
                                //CodigoGrupoPuertoDetalle = dr.IsDBNull(dr.GetOrdinal("CodigoGrupoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoGrupoPuerto")).Trim(),
                                CodigoGrupoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoGrupoPuerto")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoGrupoPuerto")),
                                CodigoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto")).Trim(),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                EstadoRegistro = dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstDetalleGrupoPuertoExterno.Add(detgrupopuertoexterno);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstDetalleGrupoPuertoExterno;
        }


        public int InsertarGrupoPuertoExterno(ActualizaGrupoPuertoExternoBE request)
        {

            int CodigoGrupoPuerto;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTA_GRUPOPUERTOEXTERNO", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@NombreGrupoPuerto", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.NombreGrupoPuerto) ? string.Empty : request.NombreGrupoPuerto;
                parametrosIn.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioCreacion) ? string.Empty : request.UsuarioCreacion;
                parametrosIn.Add("@CodigoGrupoPuerto", DbType.Int32).Direction = ParameterDirection.InputOutput;

                cmd.ExecuteNonQuery();

                CodigoGrupoPuerto = int.Parse(cmd.Parameters["@CodigoGrupoPuerto"].Value.ToString());

                SqlHelper.CloseConnection(conexion);

            }

            return CodigoGrupoPuerto;
        }

        public bool ActualizarGrupoPuertoExterno(ActualizaGrupoPuertoExternoBE request)
        {

            int queryExec;
            bool result = false;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ACTUALIZA_GRUPOPUERTOEXTERNO", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoGrupoPuerto", SqlDbType.Int).Value = request.CodigoGrupoPuerto;
                parametrosIn.Add("@NombreGrupoPuerto", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.NombreGrupoPuerto) ? string.Empty : request.NombreGrupoPuerto;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;

                queryExec = cmd.ExecuteNonQuery();

                if (queryExec != -1)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);

            }

            return result;
        }

        public bool ModificarDetalleGrupoPuertoExterno(List<DetalleGrupoPuertoExternoBE> request)
        {

            int queryExec;
            bool result = false;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
            var dtDetalleGrPexterno = request.ToDataTable();
            parametrosIn.Add("@dtDetalleGrupoPuertoExterno", dtDetalleGrPexterno);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_DETALLEGRUPOPUERTOEXTERNO", conexion, parametrosIn, true))
            {
                queryExec = cmd.ExecuteNonQuery();

                if (queryExec > 0)
                {
                    result = true;
                }
                //CodigoTarifaLocal = int.Parse(cmd.Parameters["@CodigoTarifaLocal"].Value.ToString()); 

                SqlHelper.CloseConnection(conexion);

            }

            return result;
        }

        public bool EliminarGrupoPuertoExterno(EliminaGrupoPuertoExternoBE request)
        {

            bool result = false;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametros = new Dictionary<string, object>();
            parametros.Add("@CodigoGrupoPuerto", request.CodigoGrupoPuerto);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_ELIMINA_GRUPOPUERTOEXTERNO", conexion, parametros, true))
            {
                cmd.ExecuteNonQuery();
                result = true;
                SqlHelper.CloseConnection(conexion);
            }


            return result;
        }

        public bool InsertarPesoVariable(ActualizaPesoVariableBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_PESOVARIABLE", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;
                parametrosIn.Add("@PesoVariable", SqlDbType.Int).Value = request.PesoVariable;
                parametrosIn.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioCreacion) ? string.Empty : request.UsuarioCreacion;
                parametrosIn.Add("@FechaHoraCreacion", SqlDbType.DateTime).Value = request.FechaHoraCreacion == null ? DateTime.Now : request.FechaHoraCreacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public bool ActualizarPesoVariable(ActualizaPesoVariableBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ACTUALIZAR_PESOVARIABLE", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoVariable", SqlDbType.Int).Value = request.CodigoVariable;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;
                parametrosIn.Add("@PesoVariable", SqlDbType.Int).Value = request.PesoVariable;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;
                parametrosIn.Add("@FechaHoraActualizacion", SqlDbType.DateTime).Value = request.FechaHoraActualizacion == null ? DateTime.Now : request.FechaHoraActualizacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public bool EliminarPesoVariable(EliminaPesoVariableBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ELIMINA_PESOVARIABLE", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoVariable", SqlDbType.Int).Value = request.CodigoVariable;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public List<TarifaLocalBE> ConsultarTarifaLocalAGMADB(ConsultaTarifaLocalBE request)
        {
            List<TarifaLocalBE> lstTarifasLocales = new List<TarifaLocalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_TARIFALOCAL", conexion, true))
                {
                    SqlParameterCollection parametrosIn = cmd.Parameters;

                    parametrosIn.Add("@CodigoLinea", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea;
                    parametrosIn.Add("@CodigoSucursal", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoSucursal) ? string.Empty : request.CodigoSucursal;
                    parametrosIn.Add("@CodigoTerminalPortuario", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoTerminalPortuario) ? string.Empty : request.CodigoTerminalPortuario;
                    parametrosIn.Add("@FlagTarifaLigada", SqlDbType.Bit).Value = request.FlagTarifaLigada;
                    parametrosIn.Add("@FlagVigente", SqlDbType.Bit).Value = request.FlagVigente;
                    parametrosIn.Add("@FechaVigencia", SqlDbType.DateTime);
                    parametrosIn["@FechaVigencia"].IsNullable = true;

                    if (request.FechaVigencia == null)
                    {
                        parametrosIn["@FechaVigencia"].Value = DBNull.Value;
                    }
                    else
                    {
                        parametrosIn["@FechaVigencia"].Value = request.FechaVigencia;
                    }

                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaLocalBE tarifaLocal = new TarifaLocalBE()
                            {
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim(),
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim(),
                                Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Monto")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim(),
                                CodigoTerminalPortuario = dr.IsDBNull(dr.GetOrdinal("CodigoTerminalPortuario")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTerminalPortuario")).Trim(),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? "" : dr.GetString(dr.GetOrdinal("EstadoRegistro")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim()
                            };

                            lstTarifasLocales.Add(tarifaLocal);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstTarifasLocales;

        }

        public List<TarifaTramarsaBE> ConsultarTarifaTramarsa(ConsultaTarifaTramarsaBE request)
        {
            List<TarifaTramarsaBE> lstTarifasLocales = new List<TarifaTramarsaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoConcepto", String.IsNullOrEmpty(request.CodigoConcepto) ? string.Empty : request.CodigoConcepto);
                parametrosIn.Add("@CodigoTarifa", String.IsNullOrEmpty(request.CodigoTarifa) ? string.Empty : request.CodigoTarifa);
                parametrosIn.Add("@DescripcionTarifa", String.IsNullOrEmpty(request.DescripcionTarifa) ? string.Empty : request.DescripcionTarifa);
                parametrosIn.Add("@dtCodigosTarifa", request.dtCodigosTarifa);


                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_OBTENER_DATOS_TARIFA", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaTramarsaBE tarifaLocal = new TarifaTramarsaBE()
                            {
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim(),
                                DescripcionTarifa = dr.IsDBNull(dr.GetOrdinal("DescripcionTarifa")) ? "" : dr.GetString(dr.GetOrdinal("DescripcionTarifa")).Trim(),
                                CodigoUnidadCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoUnidadCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUnidadCalculo")).Trim()
                            };

                            lstTarifasLocales.Add(tarifaLocal);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstTarifasLocales;
        }

        public List<TarifaLocalBE> ValidarTarifaLocal(ActualizaTarifaLocalBE requestActualizar)
        {

            List<TarifaLocalBE> lstTarifasLocales = new List<TarifaLocalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoTarifaLocal", requestActualizar.CodigoTarifaLocal);
                parametrosIn.Add("@CodigoConcepto", String.IsNullOrEmpty(requestActualizar.CodigoConcepto) ? string.Empty : requestActualizar.CodigoConcepto);
                parametrosIn.Add("@CodigoTarifa", String.IsNullOrEmpty(requestActualizar.CodigoTarifa) ? string.Empty : requestActualizar.CodigoTarifa);
                parametrosIn.Add("@CodigoRegimen", String.IsNullOrEmpty(requestActualizar.CodigoRegimen) ? string.Empty : requestActualizar.CodigoRegimen);
                parametrosIn.Add("@CodigoLinea", String.IsNullOrEmpty(requestActualizar.CodigoLinea) ? string.Empty : requestActualizar.CodigoLinea);
                parametrosIn.Add("@EstadoRegistro", true);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_VALIDAR_TARIFALOCAL", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaLocalBE tarifaLocal = new TarifaLocalBE()
                            {
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim(),
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim()
                            };

                            lstTarifasLocales.Add(tarifaLocal);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstTarifasLocales;

        }

        public int InsertarTarifaLocal(ActualizaTarifaLocalBE request)
        {

            int CodigoTarifaLocal;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_TARIFALOCAL", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoRegimen", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoRegimen) ? string.Empty : request.CodigoRegimen;
                parametrosIn.Add("@CodigoTarifa", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoTarifa) ? string.Empty : request.CodigoTarifa;
                parametrosIn.Add("@CodigoConcepto", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoConcepto) ? string.Empty : request.CodigoConcepto;
                parametrosIn.Add("@CodigoMoneda", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoMoneda) ? string.Empty : request.CodigoMoneda;
                parametrosIn.Add("@CodigoLinea", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea;
                parametrosIn.Add("@Monto", SqlDbType.Decimal).Value = request.Monto;
                parametrosIn.Add("@CodigoUsuarioAutorizador", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoUsuarioAutorizador) ? string.Empty : request.CodigoUsuarioAutorizador;
                parametrosIn.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioCreacion) ? string.Empty : request.UsuarioCreacion;
                parametrosIn.Add("@FechaHoraCreacion", SqlDbType.DateTime).Value = request.FechaHoraCreacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;
                parametrosIn.Add("@CodigoTarifaLocal", DbType.Int32).Direction = ParameterDirection.InputOutput;

                cmd.ExecuteNonQuery();

                CodigoTarifaLocal = int.Parse(cmd.Parameters["@CodigoTarifaLocal"].Value.ToString());

                SqlHelper.CloseConnection(conexion);

            }

            return CodigoTarifaLocal;
        }


        public bool RegistrarTarifaLocalVigencia(List<TarifaLocalVigenciaBE> request)
        {
            bool result = false;
            int rows = 0;
            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
            var dtLocalVigencia = (from origin in request
                                   select new
                                   {
                                       CodigoTarifaLocal = origin.CodigoTarifaLocal,
                                       CodigoTipoVigencia = origin.CodigoTipoVigencia,
                                       CodigoTipoValorVigencia = origin.CodigoTipoValorVigencia,
                                       CodigoSucursal = origin.CodigoSucursal,
                                       Valor = origin.Valor,
                                       Accion = origin.Accion
                                   }).ToList().ToDataTable();

            //dtLocalVigencia.Columns.Remove("DescripcionSucursal");
            parametrosIn.Add("@dtTarifaLocalVigencia", dtLocalVigencia);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFALOCALVIGENCIA", conexion, parametrosIn, true))
            {
                rows = cmd.ExecuteNonQuery();

                if (rows > 0)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);
            }



            return result;
        }

        public bool RegistrarTarifaLocalSucursal(List<TarifaLocalSucursalBE> request)
        {
            bool result = false;
            int rows = 0;
            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
            var dtTarifaLocalSucursal = (from origin in request
                                         select new
                                         {
                                             CodigoTarifaLocal = origin.CodigoTarifaLocal,
                                             CodigoSucursal = origin.Codigo,
                                             Accion = origin.Accion
                                         }).ToList().ToDataTable();
            //dtTarifaLocalSucursal.Columns.Remove("DescripcionSucursal");
            parametrosIn.Add("@dtTarifaLocalSucursal", dtTarifaLocalSucursal);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFALOCALSUCURSAL", conexion, parametrosIn, true))
            {
                rows = cmd.ExecuteNonQuery();

                if (rows > 0)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);
            }

            return result;
        }
        public bool RegistrarTarifaLocalSucursalTerminal(List<TarifaLocalSucursalTerminalBE> request)
        {
            bool result = false;
            int rows = 0;
            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
            var dtLocalSucursalTerminal = (from origin in request
                                           select new
                                           {
                                               CodigoTarifaLocal = origin.CodigoTarifaLocal,
                                               CodigoSucursal = origin.CodigoSucursal,
                                               CodigoTerminalPortuario = origin.CodigoAlmacen,
                                               Accion = origin.Accion
                                           }).ToList().ToDataTable();

            //dtLocalSucursalTerminal.Columns.Remove("DescripcionSucursal");
            //dtLocalSucursalTerminal.Columns.Remove("DescripcionTerminalPortuario");
            parametrosIn.Add("@dtTarifaLocalSucursalTerminal", dtLocalSucursalTerminal);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFALOCALSUCURSALTERMINAL", conexion, parametrosIn, true))
            {
                rows = cmd.ExecuteNonQuery();

                if (rows > 0)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);
            }

            return result;
        }
        public bool RegistrarTarifaLocalLigada(List<TarifaLocalLigadaBE> request)
        {
            bool result = false;
            int rows = 0;
            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
            var dtLocalLigada = (from origin in request
                                 select new
                                 {
                                     CodigoTarifaLigadaLocal = origin.CodigoTarifaLigadaLocal,
                                     CodigoTarifaLocal = origin.CodigoTarifaLocal,
                                     CodigoConfiguracionTarifaLigada = origin.CodigoConfiguracionTarifaLigada,
                                     Porcentaje = origin.Porcentaje,
                                     CodigoMoneda = origin.CodigoMoneda,
                                     Monto = origin.Monto,
                                     Accion = origin.Accion
                                 }).ToList().ToDataTable();

            //dtLocalLigada.Columns.Remove("DescripcionConfiguracion");
            //dtLocalLigada.Columns.Remove("DescripcionConceptoLigado");
            //dtLocalLigada.Columns.Remove("DescripcionMoneda");
            //dtLocalLigada.Columns.Remove("CodigoConcepto");
            //dtLocalLigada.Columns.Remove("CodigoTarifa");
            //dtLocalLigada.Columns.Remove("CodigoMonedaBase");
            //dtLocalLigada.Columns.Remove("MontoBase");
            //dtLocalLigada.Columns.Remove("DescripcionMonedaBase");

            parametrosIn.Add("@dtTarifaLocalLigada", dtLocalLigada);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFALOCALLIGADA", conexion, parametrosIn, true))
            {
                rows = cmd.ExecuteNonQuery();

                if (rows > 0)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);
            }

            return result;
        }

        public int ActualizarTarifaLocal(ActualizaTarifaLocalBE request)
        {

            int CodigoTarifaLocal;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ACTUALIZAR_TARIFALOCAL", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoRegimen", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoRegimen) ? string.Empty : request.CodigoRegimen;
                parametrosIn.Add("@CodigoTarifa", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoTarifa) ? string.Empty : request.CodigoTarifa;
                parametrosIn.Add("@CodigoConcepto", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoConcepto) ? string.Empty : request.CodigoConcepto;
                parametrosIn.Add("@CodigoMoneda", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoMoneda) ? string.Empty : request.CodigoMoneda;
                parametrosIn.Add("@CodigoLinea", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea;
                parametrosIn.Add("@Monto", SqlDbType.Decimal).Value = request.Monto;
                parametrosIn.Add("@CodigoUsuarioAutorizador", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoUsuarioAutorizador) ? string.Empty : request.CodigoUsuarioAutorizador;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;
                parametrosIn.Add("@FechaHoraActualizacion", SqlDbType.DateTime).Value = request.FechaHoraActualizacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;
                parametrosIn.Add("@CodigoTarifaLocal", SqlDbType.Int).Value = request.CodigoTarifaLocal;

                cmd.ExecuteNonQuery();

                CodigoTarifaLocal = int.Parse(cmd.Parameters["@CodigoTarifaLocal"].Value.ToString());

                SqlHelper.CloseConnection(conexion);

            }

            return CodigoTarifaLocal;
        }

        public List<TarifaEscalonadaBE> ValidarTarifaEscalonada(InsertaTarifaEscalonadaBE requestInsertar = null, ActualizaTarifaEscalonadaBE requestActualizar = null)
        {

            List<TarifaEscalonadaBE> lstTarifaEscalonada = new List<TarifaEscalonadaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                if (requestInsertar != null)
                {
                    parametrosIn.Add("@CodigoTarifaEscalonada", 0);
                    parametrosIn.Add("@CodigoConcepto", String.IsNullOrEmpty(requestInsertar.CodigoConcepto) ? string.Empty : requestInsertar.CodigoConcepto);
                    parametrosIn.Add("@CodigoTarifa", String.IsNullOrEmpty(requestInsertar.CodigoTarifa) ? string.Empty : requestInsertar.CodigoTarifa);
                    parametrosIn.Add("@CodigoRegimen", String.IsNullOrEmpty(requestInsertar.CodigoRegimen) ? string.Empty : requestInsertar.CodigoRegimen);
                    parametrosIn.Add("@CodigoLinea", String.IsNullOrEmpty(requestInsertar.CodigoLinea) ? string.Empty : requestInsertar.CodigoLinea);
                }


                if (requestActualizar != null)
                {
                    parametrosIn.Add("@CodigoTarifaEscalonada", 0);
                    parametrosIn.Add("@CodigoConcepto", String.IsNullOrEmpty(requestActualizar.CodigoConcepto) ? string.Empty : requestActualizar.CodigoConcepto);
                    parametrosIn.Add("@CodigoTarifa", String.IsNullOrEmpty(requestActualizar.CodigoTarifa) ? string.Empty : requestActualizar.CodigoTarifa);
                    parametrosIn.Add("@CodigoRegimen", String.IsNullOrEmpty(requestActualizar.CodigoRegimen) ? string.Empty : requestActualizar.CodigoRegimen);
                    parametrosIn.Add("@CodigoLinea", String.IsNullOrEmpty(requestActualizar.CodigoLinea) ? string.Empty : requestActualizar.CodigoLinea);
                }
                //parametrosIn.Add("@CodigoTarifaLocal", 0);
                //parametrosIn.Add("@CodigoConcepto", "01A0");
                //parametrosIn.Add("@CodigoTarifa", "132");
                //parametrosIn.Add("@CodigoRegimen", "I");
                //parametrosIn.Add("@CodigoLinea", "HLL");

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_VALIDAR_TARIFAESCALONADA", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {

                        while (dr.Read())
                        {
                            TarifaEscalonadaBE tarifaLocal = new TarifaEscalonadaBE()
                            {
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim(),
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim()
                            };

                            lstTarifaEscalonada.Add(tarifaLocal);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstTarifaEscalonada;

        }

        public int InsertarTarifaEscalonada(InsertaTarifaEscalonadaBE request)
        {

            int CodigoTarifaEscalonada;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_TARIFAESCALONADA", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoRegimen", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoRegimen) ? string.Empty : request.CodigoRegimen;
                parametrosIn.Add("@CodigoTarifa", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoTarifa) ? string.Empty : request.CodigoTarifa;
                parametrosIn.Add("@CodigoConcepto", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoConcepto) ? string.Empty : request.CodigoConcepto;
                parametrosIn.Add("@CodigoLinea", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea;
                parametrosIn.Add("@CodigoUnidadCalculo", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoUnidadCalculo) ? string.Empty : request.CodigoUnidadCalculo;
                parametrosIn.Add("@CodigoUsuarioAutorizador", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoUsuarioAutorizador) ? string.Empty : request.CodigoUsuarioAutorizador;
                parametrosIn.Add("@InicioVigencia", SqlDbType.DateTime).Value = request.InicioVigencia == null ? new Nullable<DateTime>() : request.InicioVigencia;
                parametrosIn.Add("@FinVigencia", SqlDbType.DateTime).Value = request.FinVigencia == null ? new Nullable<DateTime>() : request.FinVigencia;
                parametrosIn.Add("@CodigoTipoFechaCalculo", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoTipoFechaCalculo) ? string.Empty : request.CodigoTipoFechaCalculo;
                parametrosIn.Add("@DiasDelayCalculo", SqlDbType.Int).Value = request.DiasDelayCalculo;
                parametrosIn.Add("@CodigoTipoDiaCalculo", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoTipoDiaCalculo) ? string.Empty : request.CodigoTipoDiaCalculo;
                parametrosIn.Add("@Usuario", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Usuario) ? string.Empty : request.Usuario;
                parametrosIn.Add("@FechaHora", SqlDbType.DateTime).Value = request.FechaHora;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;
                parametrosIn.Add("@CodigoTarifaEscalonada", DbType.Int32).Direction = ParameterDirection.InputOutput;

                cmd.ExecuteNonQuery();

                CodigoTarifaEscalonada = int.Parse(cmd.Parameters["@CodigoTarifaEscalonada"].Value.ToString());

                SqlHelper.CloseConnection(conexion);

            }

            return CodigoTarifaEscalonada;
        }


        public bool RegistrarTarifaEscalonadaPeriodo(List<TarifaEscalonadaPeriodoBE> request)
        {
            bool result = false;
            int rows = 0;
            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

            var dtTarifaEscalonadaPeriodo = (from origin in request
                                             select new
                                             {
                                                 CodigoTarifaEscalonada = origin.CodigoTarifaEscalonada,
                                                 CodigoTipoContenedor = origin.CodigoTipoContenedor,
                                                 CodigoPeriodo = origin.CodigoPeriodo,
                                                 NumeroDias = origin.NumeroDias,
                                                 CodigoMoneda = origin.CodigoMoneda,
                                                 Precio = origin.Precio,
                                                 Accion = origin.Accion
                                             }).ToList().ToDataTable();

            //dtTarifaEscalonadaPeriodo.Columns.Remove("DescripcionMoneda");
            parametrosIn.Add("@dtTarifaEscalonadaPeriodo", dtTarifaEscalonadaPeriodo);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFAESCALONADAPERIODO", conexion, parametrosIn, true))
            {
                rows = cmd.ExecuteNonQuery();

                if (rows > 0)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);
            }

            return result;
        }

        public bool RegistrarTarifaEscalonadaSucursal(List<TarifaEscalonadaSucursalBE> request)
        {
            bool result = false;
            int rows = 0;
            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
            var dtEscalonadaSucursal = (from origin in request
                                        select new
                                        {
                                            CodigoTarifaEscalonada = origin.CodigoTarifaEscalonada,
                                            CodigoSucursal = origin.CodigoSucursal,
                                            Accion = origin.Accion
                                        }).ToList().ToDataTable();

            //dtEscalonadaSucursal.Columns.Remove("DescripcionSucursal");
            parametrosIn.Add("@dtTarifaEscalonadaSucursal", dtEscalonadaSucursal);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFAESCALONADASUCURSAL", conexion, parametrosIn, true))
            {
                rows = cmd.ExecuteNonQuery();

                if (rows > 0)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);
            }

            return result;
        }

        public bool RegistrarTarifaEscalonadaLigada(List<TarifaEscalonadaLigadaBE> request)
        {
            bool result = false;
            int rows = 0;
            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
            var dtTarifaEscalonadaLigada = (from origin in request
                                            select new
                                            {
                                                CodigoTarifaLigadaLocal = origin.CodigoTarifaLigadaLocal,
                                                CodigoTarifaEscalonada = origin.CodigoTarifaEscalonada,
                                                CodigoConfiguracionTarifaLigada = origin.CodigoConfiguracionTarifaLigada,
                                                Porcentaje = origin.Porcentaje,
                                                CodigoMoneda = origin.CodigoMoneda,
                                                Monto = origin.Monto,
                                                Accion = origin.Accion
                                            }).ToList().ToDataTable();

            //dtTarifaEscalonadaLigada.Columns.Remove("DescripcionMoneda");
            parametrosIn.Add("@dtTarifaEscalonadaLigada", dtTarifaEscalonadaLigada);

            using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFAESCALONADALIGADA", conexion, parametrosIn, true))
            {
                rows = cmd.ExecuteNonQuery();

                if (rows > 0)
                {
                    result = true;
                }

                SqlHelper.CloseConnection(conexion);
            }

            return result;
        }

        public List<DetalleTarifaLocalBE> ConsultarDetalleTarifaLocal(ConsultaDetalleTarifaLocalBE request)
        {
            List<DetalleTarifaLocalBE> lstDetalleTarifaLocal = new List<DetalleTarifaLocalBE>();
            List<TarifaLocalVigenciaBE> lstTarifaLocalVigencia = new List<TarifaLocalVigenciaBE>();
            List<TarifaLocalSucursalBE> lstTarifaLocalSucursal = new List<TarifaLocalSucursalBE>();
            List<TarifaLocalSucursalTerminalBE> lstTarifaLocalSucursalTerminal = new List<TarifaLocalSucursalTerminalBE>();
            List<TarifaLocalLigadaBE> lstTarifaLocalLigada = new List<TarifaLocalLigadaBE>();



            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoTarifaLocal", request.CodigoTarifaLocal);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_DETALLE_TARIFALOCAL", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleTarifaLocalBE detalleTarifaLocal = new DetalleTarifaLocalBE();

                            detalleTarifaLocal.CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal"));
                            detalleTarifaLocal.CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim();
                            detalleTarifaLocal.CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim();
                            detalleTarifaLocal.CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim();
                            detalleTarifaLocal.CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim();
                            detalleTarifaLocal.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim();
                            detalleTarifaLocal.Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? 0 : dr.GetDecimal(dr.GetOrdinal("Monto"));
                            detalleTarifaLocal.CodigoUsuarioAutorizador = dr.IsDBNull(dr.GetOrdinal("CodigoUsuarioAutorizador")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUsuarioAutorizador")).Trim();
                            detalleTarifaLocal.UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim();
                            detalleTarifaLocal.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                            detalleTarifaLocal.UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim();
                            detalleTarifaLocal.FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion"));
                            detalleTarifaLocal.EstadoRegistro = dr.GetBoolean(dr.GetOrdinal("EstadoRegistro")) ? EstadoRegistro.Activo.GetDescription() : EstadoRegistro.Inactivo.GetDescription();

                            lstDetalleTarifaLocal.Add(detalleTarifaLocal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            TarifaLocalVigenciaBE TLocalVigencia = new TarifaLocalVigenciaBE()
                            {
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                CodigoTipoVigencia = dr.IsDBNull(dr.GetOrdinal("CodigoTipoVigencia")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoVigencia")).Trim(),
                                CodigoTipoValorVigencia = dr.IsDBNull(dr.GetOrdinal("CodigoTipoValorVigencia")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoValorVigencia")).Trim(),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim(),
                                Valor = dr.GetDateTime(dr.GetOrdinal("Valor"))
                            };

                            lstTarifaLocalVigencia.Add(TLocalVigencia);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            TarifaLocalSucursalBE TLocalSucursal = new TarifaLocalSucursalBE()
                            {
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim()
                            };

                            lstTarifaLocalSucursal.Add(TLocalSucursal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            TarifaLocalSucursalTerminalBE TLocalSucursalTerminal = new TarifaLocalSucursalTerminalBE()
                            {
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim(),
                                CodigoAlmacen = dr.IsDBNull(dr.GetOrdinal("CodigoTerminalPortuario")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTerminalPortuario")).Trim()
                            };

                            lstTarifaLocalSucursalTerminal.Add(TLocalSucursalTerminal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            TarifaLocalLigadaBE TLocalLigada = new TarifaLocalLigadaBE()
                            {
                                CodigoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigadaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigadaLocal")),
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                CodigoConfiguracionTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")).Trim(),
                                Porcentaje = dr.IsDBNull(dr.GetOrdinal("Porcentaje")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Porcentaje")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Monto")),
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim(),
                                CodigoMonedaTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoMonedaBase")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMonedaBase")).Trim(),
                                MontoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("MontoBase")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("MontoBase"))
                            };

                            lstTarifaLocalLigada.Add(TLocalLigada);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    foreach (var tarifaLocal in lstDetalleTarifaLocal)
                    {
                        tarifaLocal.TarifaLocalVigenciaList = lstTarifaLocalVigencia.Where(x => x.CodigoTarifaLocal == tarifaLocal.CodigoTarifaLocal).ToList();
                        tarifaLocal.TarifaLocalSucursalList = lstTarifaLocalSucursal.Where(x => x.CodigoTarifaLocal == tarifaLocal.CodigoTarifaLocal).ToList();
                        tarifaLocal.TarifaLocalSucursalTerminalList = lstTarifaLocalSucursalTerminal.Where(x => x.CodigoTarifaLocal == tarifaLocal.CodigoTarifaLocal).ToList();
                        tarifaLocal.TarifaLocalLigadaList = lstTarifaLocalLigada.Where(x => x.CodigoTarifaLocal == tarifaLocal.CodigoTarifaLocal).ToList();
                    }


                }


            }

            return lstDetalleTarifaLocal;

        }

        public List<TarifaEscalonadaBE> ConsultarTarifaEscalonadaAGMADB(ConsultaTarifaEscalonadaBE request)
        {
            List<TarifaEscalonadaBE> lstTarifaEscalonada = new List<TarifaEscalonadaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_TARIFAESCALONADA", conexion, true))
                {
                    SqlParameterCollection parametrosIn = cmd.Parameters;

                    parametrosIn.Add("@CodigoLinea", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea;
                    //parametrosIn.Add("@DescripcionTarifa", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoSucursal) ? string.Empty : request.CodigoSucursal;
                    parametrosIn.Add("@CodigoTipoContenedor", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoTipoContenedor) ? string.Empty : request.CodigoTipoContenedor;
                    parametrosIn.Add("@FlagTarifaLigada", SqlDbType.Bit).Value = request.FlagTarifaLigada;
                    parametrosIn.Add("@FlagVigente", SqlDbType.Bit).Value = request.FlagVigente;
                    parametrosIn.Add("@FechaVigencia", SqlDbType.DateTime);
                    parametrosIn["@FechaVigencia"].IsNullable = true;

                    if (request.FechaVigencia == null)
                    {
                        parametrosIn["@FechaVigencia"].Value = DBNull.Value;
                    }
                    else
                    {
                        parametrosIn["@FechaVigencia"].Value = request.FechaVigencia;
                    }


                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaEscalonadaBE tarifaEscalonada = new TarifaEscalonadaBE()
                            {
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim(),
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim(),
                                Precio = dr.IsDBNull(dr.GetOrdinal("Precio")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Precio")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? "" : dr.GetString(dr.GetOrdinal("EstadoRegistro")),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                CodigoUnidadCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoUnidadCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUnidadCalculo")).Trim(),
                            };

                            lstTarifaEscalonada.Add(tarifaEscalonada);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstTarifaEscalonada;

        }

        public List<DetalleTarifaEscalonadaBE> ConsultarDetalleTarifaEscalonada(ConsultaDetalleTarifaEscalonadaBE request)
        {
            List<DetalleTarifaEscalonadaBE> lstDetalleTarifaEscalonada = new List<DetalleTarifaEscalonadaBE>();
            List<TarifaEscalonadaPeriodoBE> lstTarifaEscalonadaPeriodo = new List<TarifaEscalonadaPeriodoBE>();
            List<TarifaEscalonadaSucursalBE> lstTarifaEscalonadaSucursal = new List<TarifaEscalonadaSucursalBE>();
            List<TarifaEscalonadaLigadaBE> lstTarifaEscalonadaLigada = new List<TarifaEscalonadaLigadaBE>();


            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoTarifaEscalonada", request.CodigoTarifaEscalonada);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_DETALLE_TARIFAESCALONADA", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleTarifaEscalonadaBE detalleTarifaEscalonada = new DetalleTarifaEscalonadaBE();
                            detalleTarifaEscalonada.CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada"));
                            detalleTarifaEscalonada.CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim();
                            detalleTarifaEscalonada.CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim();
                            detalleTarifaEscalonada.CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim();
                            detalleTarifaEscalonada.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim();
                            detalleTarifaEscalonada.CodigoUnidadCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoUnidadCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUnidadCalculo")).Trim();
                            detalleTarifaEscalonada.CodigoUsuarioAutorizador = dr.IsDBNull(dr.GetOrdinal("CodigoUsuarioAutorizador")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUsuarioAutorizador")).Trim();
                            detalleTarifaEscalonada.InicioVigencia = dr.IsDBNull(dr.GetOrdinal("InicioVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("InicioVigencia"));
                            detalleTarifaEscalonada.FinVigencia = dr.IsDBNull(dr.GetOrdinal("FinVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FinVigencia"));
                            detalleTarifaEscalonada.CodigoTipoFechaCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoTipoFechaCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoFechaCalculo")).Trim();
                            detalleTarifaEscalonada.DiasDelayCalculo = dr.IsDBNull(dr.GetOrdinal("DiasDelayCalculo")) ? 0 : dr.GetInt32(dr.GetOrdinal("DiasDelayCalculo"));
                            detalleTarifaEscalonada.CodigoTipoDiaCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoTipoDiaCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoDiaCalculo")).Trim();
                            detalleTarifaEscalonada.UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim();
                            detalleTarifaEscalonada.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                            detalleTarifaEscalonada.UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim();
                            detalleTarifaEscalonada.FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion"));
                            detalleTarifaEscalonada.EstadoRegistro = dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"));

                            lstDetalleTarifaEscalonada.Add(detalleTarifaEscalonada);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            TarifaEscalonadaSucursalBE TescalonadaSucursal = new TarifaEscalonadaSucursalBE()
                            {
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim()
                            };

                            lstTarifaEscalonadaSucursal.Add(TescalonadaSucursal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            TarifaEscalonadaPeriodoBE TescalonadaPeriodo = new TarifaEscalonadaPeriodoBE()
                            {
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor")).Trim(),
                                CodigoPeriodo = dr.IsDBNull(dr.GetOrdinal("CodigoPeriodo")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoPeriodo")),
                                NumeroDias = dr.IsDBNull(dr.GetOrdinal("NumeroDias")) ? 0 : dr.GetInt32(dr.GetOrdinal("NumeroDias")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Precio = dr.IsDBNull(dr.GetOrdinal("Precio")) ? 0 : dr.GetDecimal(dr.GetOrdinal("Precio")),
                                CodigoClaseContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClaseContenedor")).Trim(),
                                ClaseContenedor = dr.IsDBNull(dr.GetOrdinal("ClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("ClaseContenedor")).Trim()
                            };

                            lstTarifaEscalonadaPeriodo.Add(TescalonadaPeriodo);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            TarifaEscalonadaLigadaBE TescalonadaLigada = new TarifaEscalonadaLigadaBE()
                            {
                                CodigoTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigada")),
                                CodigoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigadaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigadaLocal")),
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim(),
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoConfiguracionTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")).Trim(),
                                Porcentaje = dr.IsDBNull(dr.GetOrdinal("Porcentaje")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Porcentaje")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Monto")),
                                CodigoMonedaTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoMonedaBase")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMonedaBase")).Trim(),
                                MontoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("MontoBase")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("MontoBase"))
                            };

                            lstTarifaEscalonadaLigada.Add(TescalonadaLigada);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    foreach (var tarifaEscalonada in lstDetalleTarifaEscalonada)
                    {
                        tarifaEscalonada.TarifaEscalonadaSucursalList = lstTarifaEscalonadaSucursal.Where(x => x.CodigoTarifaEscalonada == tarifaEscalonada.CodigoTarifaEscalonada).ToList();
                        tarifaEscalonada.TarifaEscalonadaPeriodoList = lstTarifaEscalonadaPeriodo.Where(x => x.CodigoTarifaEscalonada == tarifaEscalonada.CodigoTarifaEscalonada).ToList();
                        tarifaEscalonada.TarifaEscalonadaLigadaList = lstTarifaEscalonadaLigada.Where(x => x.CodigoTarifaEscalonada == tarifaEscalonada.CodigoTarifaEscalonada).ToList();
                    }

                }

            }

            return lstDetalleTarifaEscalonada;

        }

        public List<TarifaLocalHistorialBE> ConsultarTarifaLocalHistorial(ConsultaTarifaLocalHistorialBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<TarifaLocalHistorialBE> lstTarifaLocaleHistorial = new List<TarifaLocalHistorialBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoTarifaLocal", request.CodigoTarifaLocal);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_TARIFALOCALHISTORIAL", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaLocalHistorialBE tarifaLocalHistorial = new TarifaLocalHistorialBE()
                            {
                                CodigoTarifaLocalHistorial = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocalHistorial")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocalHistorial")),
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                Usuario = dr.IsDBNull(dr.GetOrdinal("Usuario")) ? "" : dr.GetString(dr.GetOrdinal("Usuario")).Trim(),
                                FechaHora = dr.IsDBNull(dr.GetOrdinal("FechaHora")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHora")),
                                Accion = dr.IsDBNull(dr.GetOrdinal("Accion")) ? "" : dr.GetString(dr.GetOrdinal("Accion")),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim()
                            };

                            lstTarifaLocaleHistorial.Add(tarifaLocalHistorial);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());

                }
            }

            return lstTarifaLocaleHistorial;

        }


        public List<TarifaEscalonadaHistorialBE> ConsultarTarifaEscalonadaHistorial(ConsultaTarifaEscalonadaHistorialBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<TarifaEscalonadaHistorialBE> lstTarifaEscalonadaeHistorial = new List<TarifaEscalonadaHistorialBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoTarifaEscalonada", request.CodigoTarifaEscalonada);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_TARIFAESCALONADAHISTORIAL", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaEscalonadaHistorialBE tarifaEscalonadaHistorial = new TarifaEscalonadaHistorialBE()
                            {
                                CodigoTarifaEscalonadaHistorial = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonadaHistorial")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonadaHistorial")),
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                Usuario = dr.IsDBNull(dr.GetOrdinal("Usuario")) ? "" : dr.GetString(dr.GetOrdinal("Usuario")).Trim(),
                                FechaHora = dr.IsDBNull(dr.GetOrdinal("FechaHora")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHora")),
                                Accion = dr.IsDBNull(dr.GetOrdinal("Accion")) ? "" : dr.GetString(dr.GetOrdinal("Accion")),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim()
                            };

                            lstTarifaEscalonadaeHistorial.Add(tarifaEscalonadaHistorial);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstTarifaEscalonadaeHistorial;

        }

        public int InsertarTarifaLocalHistorial(InsertaTarifaLocalHistorialBE request)
        {

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));
            int result = 0;

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_TARIFALOCALHISTORIAL", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTarifaLocal", SqlDbType.Int).Value = request.CodigoTarifaLocal;
                parametrosIn.Add("@Usuario", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Usuario) ? string.Empty : request.Usuario;
                parametrosIn.Add("@FechaHora", SqlDbType.DateTime).Value = request.FechaHora;
                parametrosIn.Add("@Accion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Accion) ? string.Empty : request.Accion;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result;
        }

        public int InsertarTarifaEscalonadaHistorial(InsertaTarifaEscalonadaHistorialBE request)
        {

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));
            int result = 0;

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_TARIFAESCALONADAHISTORIAL", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTarifaEscalonada", SqlDbType.Int).Value = request.CodigoTarifaEscalonada;
                parametrosIn.Add("@Usuario", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Usuario) ? string.Empty : request.Usuario;
                parametrosIn.Add("@FechaHora", SqlDbType.DateTime).Value = request.FechaHora;
                parametrosIn.Add("@Accion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Accion) ? string.Empty : request.Accion;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result;
        }


        public List<ParametroNegocio> ObtenerParametrosNegocio()
        {
            List<ParametroNegocio> lstParametroNegocio = new List<ParametroNegocio>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_PARAMETRONEGOCIO", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ParametroNegocio parametroNegocio = new ParametroNegocio()
                            {
                                IdParametroNegocio = dr.IsDBNull(dr.GetOrdinal("IdParametroNegocio")) ? 0 : dr.GetInt32(dr.GetOrdinal("IdParametroNegocio")),
                                Codigo = dr.IsDBNull(dr.GetOrdinal("Codigo")) ? "" : dr.GetString(dr.GetOrdinal("Codigo")).Trim(),
                                Valor = dr.IsDBNull(dr.GetOrdinal("Valor")) ? "" : dr.GetString(dr.GetOrdinal("Valor")).Trim(),
                                ValorRelacionado = dr.IsDBNull(dr.GetOrdinal("ValorRelacionado")) ? "" : dr.GetString(dr.GetOrdinal("ValorRelacionado")).Trim(),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim(),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new DateTime() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new DateTime() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstParametroNegocio.Add(parametroNegocio);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstParametroNegocio;

        }

        public bool ActualizarParametroNegocio(ActualizarParametroNegocio request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ACTUALIZAR_PARAMETRONEGOCIO", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@IdParametroNegocio", SqlDbType.Int).Value = request.IdParametroNegocio;
                parametrosIn.Add("@Codigo", SqlDbType.VarChar).Value = request.Codigo;
                parametrosIn.Add("@Valor", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.Valor) ? string.Empty : request.Valor;
                parametrosIn.Add("@ValorRelacionado", SqlDbType.VarChar).Value = request.ValorRelacionado;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = request.Descripcion;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;
                parametrosIn.Add("@FechaHoraActualizacion", SqlDbType.DateTime).Value = request.FechaHoraActualizacion == null ? DateTime.Now : request.FechaHoraActualizacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public bool EliminarParametroNegocio(EliminarParametroNegocio request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ELIMINA_PARAMETRONEGOCIO", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@IdParametroNegocio", SqlDbType.Int).Value = request.IdParametroNegocio;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.Int).Value = string.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public int ActualizarTarifaEscalonada(ActualizaTarifaEscalonadaBE request)
        {
            int result;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@CodigoTarifaEscalonada", request.CodigoTarifaEscalonada);
                parametrosIn.Add("@CodigoRegimen", request.CodigoRegimen);
                parametrosIn.Add("@CodigoTarifa", request.CodigoTarifa);
                parametrosIn.Add("@CodigoConcepto", request.CodigoConcepto);
                parametrosIn.Add("@CodigoLinea", request.CodigoLinea);
                parametrosIn.Add("@CodigoUnidadCalculo", request.CodigoUnidadCalculo);
                parametrosIn.Add("@CodigoUsuarioAutorizador", request.CodigoUsuarioAutorizador);
                parametrosIn.Add("@InicioVigencia", request.InicioVigencia);
                parametrosIn.Add("@FinVigencia", request.FinVigencia);
                parametrosIn.Add("@CodigoTipoFechaCalculo", request.CodigoTipoFechaCalculo);
                parametrosIn.Add("@DiasDelayCalculo", request.DiasDelayCalculo);
                parametrosIn.Add("@CodigoTipoDiaCalculo", request.CodigoTipoDiaCalculo);
                parametrosIn.Add("@Usuario", request.Usuario);
                parametrosIn.Add("@FechaHora", request.FechaHora);
                parametrosIn.Add("@EstadoRegistro", request.EstadoRegistro);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_ACTUALIZAR_TARIFAESCALONADA", conexion, parametrosIn, true))
                {
                    result = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return result;
        }

        public int ActualizarTarifaEscalonadaSucursal(List<TarifaEscalonadaSucursalBE> request)
        {
            int result;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtTarifaEscalonadaSucursal", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFAESCALONADASUCURSAL", conexion, parametrosIn, true))
                {
                    result = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return result;
        }

        public int ActualizarTarifaEscalonadaPeriodo(List<TarifaEscalonadaPeriodoBE> request)
        {
            int result;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtTarifaEscalonadaPeriodo", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFAESCALONADAPERIODO", conexion, parametrosIn, true))
                {
                    result = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return result;
        }

        public int ActualizarTarifaEscalonadaLigada(List<TarifaEscalonadaLigadaBE> request)
        {
            int result;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtTarifaEscalonadaLigada", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_TARIFAESCALONADALIGADA", conexion, parametrosIn, true))
                {
                    result = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return result;
        }

        public List<ServicioBE> ConsultarServicio(ConsultaServiciosBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<ServicioBE> lstServicio = new List<ServicioBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoServicio", String.IsNullOrEmpty(request.CodigoServicio) ? string.Empty : request.CodigoServicio);
                parametrosIn.Add("@NombreServicio", String.IsNullOrEmpty(request.NombreServicio) ? string.Empty : request.NombreServicio);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_SERVICIOS", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ServicioBE servicio = new ServicioBE()
                            {
                                CodigoServicio = dr.IsDBNull(dr.GetOrdinal("CodigoServicio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicio")).Trim(),
                                NombreServicio = dr.IsDBNull(dr.GetOrdinal("NombreServicio")) ? "" : dr.GetString(dr.GetOrdinal("NombreServicio")).Trim()
                            };

                            lstServicio.Add(servicio);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstServicio;

        }

        public List<AcuerdoComercialLocalBE> ConsultarAcuerdoComercialLocal(ConsultaAcuerdoComercialLocalBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<AcuerdoComercialLocalBE> lstAClocal = new List<AcuerdoComercialLocalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoAcuerdoComercialLocal", request.CodigoAcuerdoComercialLocal);
                parametrosIn.Add("@CodigoLinea", String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea);
                parametrosIn.Add("@CodigoRA", String.IsNullOrEmpty(request.CodigoRA) ? string.Empty : request.CodigoRA);
                parametrosIn.Add("@CodigoCliente", String.IsNullOrEmpty(request.CodigoCliente) ? string.Empty : request.CodigoCliente);
                parametrosIn.Add("@CodigoContenedor", String.IsNullOrEmpty(request.CodigoContenedor) ? string.Empty : request.CodigoContenedor);
                parametrosIn.Add("@NumeroBL", String.IsNullOrEmpty(request.NumeroBL) ? string.Empty : request.NumeroBL);
                parametrosIn.Add("@CodigoRolSap", String.IsNullOrEmpty(request.CodigoRolSAP) ? string.Empty : request.CodigoRolSAP);


                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_ACLOCAL", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            AcuerdoComercialLocalBE aclocal = new AcuerdoComercialLocalBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                NroRA = dr.IsDBNull(dr.GetOrdinal("NroRA")) ? "" : dr.GetString(dr.GetOrdinal("NroRA")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim()
                            };

                            lstAClocal.Add(aclocal);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstAClocal;

        }

        public List<AcuerdoComercialEscalonadoBE> ConsultarAcuerdoComercialEscalonado(ConsultaAcuerdoComercialEscalonadoBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<AcuerdoComercialEscalonadoBE> lstACEscalonado = new List<AcuerdoComercialEscalonadoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoAcuerdoComercialEscalonado", request.CodigoAcuerdoComercialEscalonado);
                parametrosIn.Add("@CodigoLinea", String.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea);
                parametrosIn.Add("@NumeroBL", String.IsNullOrEmpty(request.NumeroBL) ? string.Empty : request.NumeroBL);
                parametrosIn.Add("@CodigoRA", String.IsNullOrEmpty(request.CodigoRA) ? string.Empty : request.CodigoRA);
                parametrosIn.Add("@CodigoCliente", String.IsNullOrEmpty(request.CodigoCliente) ? string.Empty : request.CodigoCliente);
                parametrosIn.Add("@CodigoRolSap", String.IsNullOrEmpty(request.CodigoCliente) ? string.Empty : request.CodigoCliente);
                parametrosIn.Add("@CodigoContenedor", String.IsNullOrEmpty(request.CodigoContenedor) ? string.Empty : request.CodigoContenedor);
                //parametrosIn.Add("@Estado", String.IsNullOrEmpty(request.Estado) ? string.Empty : request.Estado);


                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_ACESCALONADO", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoBE acEscalonado = new AcuerdoComercialEscalonadoBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                NroRA = dr.IsDBNull(dr.GetOrdinal("NroRA")) ? "" : dr.GetString(dr.GetOrdinal("NroRA")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                            };

                            lstACEscalonado.Add(acEscalonado);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstACEscalonado;

        }

        public int RegistrarAcuerdoComercialLocal(ActualizaAcuerdoComercialLocalBE request)
        {
            int result;
            int codigoAcuerdoComercialLocal = 0;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_ACLOCAL", conexion, true))
                {
                    cmd.Parameters.Add("@Estado", SqlDbType.VarChar).Value = request.Estado;
                    cmd.Parameters.Add("@CodigoLinea", SqlDbType.VarChar).Value = request.CodigoLinea;
                    cmd.Parameters.Add("@CodigoUsuarioAutorizador", SqlDbType.VarChar).Value = request.CodigoUsuarioAutorizador;
                    cmd.Parameters.Add("@FechaAutorizacion", SqlDbType.DateTime).Value = request.FechaAutorizacion;
                    cmd.Parameters.Add("@CodigoTipoCriterio", SqlDbType.VarChar).Value = request.CodigoTipoCriterio;
                    cmd.Parameters.Add("@InicioVigencia", SqlDbType.DateTime).Value = request.InicioVigencia;
                    cmd.Parameters.Add("@FinVigencia", SqlDbType.DateTime).Value = request.FinVigencia;
                    cmd.Parameters.Add("@CodigoCondicion", SqlDbType.VarChar).Value = request.CodigoCondicion;                    
                    cmd.Parameters.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = request.UsuarioCreacion;
                    cmd.Parameters.Add("@FechaHoraCreacion", SqlDbType.DateTime).Value = request.FechaHoraCreacion;
                    cmd.Parameters.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;
                    cmd.Parameters.Add("@CodigoAcuerdoComercialLocal", DbType.Int32).Direction = ParameterDirection.InputOutput;

                    result = cmd.ExecuteNonQuery();

                    codigoAcuerdoComercialLocal = (int)cmd.Parameters["@CodigoAcuerdoComercialLocal"].Value;

                    SqlHelper.CloseConnection(conexion);
                }
            }
            return codigoAcuerdoComercialLocal;
        }

        public int ActualizarAcuerdoComercialLocal(ActualizaAcuerdoComercialLocalBE request)
        {
            int result;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoAcuerdoComercialLocal", request.CodigoAcuerdoComercialLocal);
                parametrosIn.Add("@Estado", request.Estado);
                parametrosIn.Add("@CodigoLinea", request.CodigoLinea);
                parametrosIn.Add("@CodigoUsuarioAutorizador", request.CodigoUsuarioAutorizador);
                parametrosIn.Add("@FechaAutorizacion", request.FechaAutorizacion);
                parametrosIn.Add("@CodigoTipoCriterio", request.CodigoTipoCriterio);
                parametrosIn.Add("@InicioVigencia", request.InicioVigencia);
                parametrosIn.Add("@FinVigencia", request.FinVigencia);
                parametrosIn.Add("@CodigoCondicion", request.CodigoCondicion);                
                parametrosIn.Add("@UsuarioActualizacion", request.UsuarioActualizacion);
                parametrosIn.Add("@FechaHoraActualizacion", request.FechaHoraActualizacion);
                parametrosIn.Add("@EstadoRegistro", request.EstadoRegistro);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_ACTUALIZAR_ACLOCAL", conexion, parametrosIn, true))
                {
                    result = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return result;
        }

        public bool ModificarACLocalSucursal(List<AcuerdoComercialLocalSucursalBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalSucursal", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALSUCURSAL", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }

            return rows > 0;
        }

        public bool ModificarACLocalSucursalTerminal(List<AcuerdoComercialLocalSucursalTerminalBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalSucursalTerminal", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALSUCURSALTERMINAL", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalRA(List<AcuerdoComercialLocalRABE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalRA", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALRA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalPuerto(List<AcuerdoComercialLocalPuertoBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalPuerto", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALPUERTO", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalClienteBLMaster(List<AcuerdoComercialLocalClienteBLMasterBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalClienteBLMaster", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALCLIENTEBLMASTER", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalAgenteBLMaster(List<AcuerdoComercialLocalAgenteBLMasterBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalAgenteBLMaster", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALAGENTEBLMASTER", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalClienteBLHouse(List<AcuerdoComercialLocalClienteBLHouseBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalClienteBLHouse", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALCLIENTEBLHOUSE", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalAgenteBLHouse(List<AcuerdoComercialLocalAgenteBLHouseBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalAgenteBLHouse", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALAGENTEBLHOUSE", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalServicioNave(List<AcuerdoComercialLocalServicioNaveBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalServicioNave", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALSERVICIONAVE", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalServicioBL(List<AcuerdoComercialLocalServicioBLBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalServicioBL", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALSERVICIOBL", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalTipoContenedor(List<AcuerdoComercialLocalTipoContenedorBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalTipoContenedor", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALTIPOCONTENEDOR", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalCarga(List<AcuerdoComercialLocalCargaBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialLocalCarga", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALCARGA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalTarifa(List<AcuerdoComercialLocalTarifaBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                var dtTarifa = (from origin in request
                                select new
                                {
                                    CodigoAcuerdoComercialLocal = origin.CodigoAcuerdoComercialLocal,
                                    CodigoTarifaLocal = origin.CodigoTarifaLocal,
                                    CodigoTipoDescuento = origin.CodigoTipoDescuento,
                                    ValorDescuento = origin.ValorDescuento,
                                    CodigoMonedaAcuerdo = origin.CodigoMonedaAcuerdo,
                                    MontoAcuerdo = origin.MontoAcuerdo,
                                    Accion = origin.Accion
                                }).ToList().ToDataTable();

                parametrosIn.Add("@dtAcuerdoComercialLocalTarifa", dtTarifa);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALTARIFA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACLocalTarifaLigada(List<AcuerdoComercialLocalTarifaLigadaBE> request)
        {
            int rows;
            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@dtAcuerdoComercialLocalTarifaLigada", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACLOCALTARIFALIGADA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public List<AcuerdoComercialLocalRABE> ValidarACLocalRA(List<AcuerdoComercialLocalRABE> request, string accion)
        {
            List<AcuerdoComercialLocalRABE> aCLocalRABEList = new List<AcuerdoComercialLocalRABE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@EstadoRegistro", true);
                parametrosIn.Add("@dtAcuerdoComercialLocalRA", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_VALIDAR_ACLOCALRA", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            AcuerdoComercialLocalRABE aCLocalRABE = new AcuerdoComercialLocalRABE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoRA = dr.IsDBNull(dr.GetOrdinal("CodigoRA")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRA")).Trim(),
                            };

                            aCLocalRABEList.Add(aCLocalRABE);

                        }

                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return aCLocalRABEList;

        }

        #region ACUERDO COMERCIAL ESCALONADO

        public int RegistrarAcuerdoComercialEscalonado(ActualizaAcuerdoComercialEscalonadoBE request)
        {
            int result;
            int codigoAcuerdoComercialEscalonado = 0;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_ACESCALONADO", conexion, true))
                {

                    cmd.Parameters.Add("@Estado", SqlDbType.VarChar).Value = request.Estado;
                    cmd.Parameters.Add("@CodigoLinea", SqlDbType.VarChar).Value = request.CodigoLinea;
                    cmd.Parameters.Add("@CodigoUsuarioAutorizador", SqlDbType.VarChar).Value = request.CodigoUsuarioAutorizador;
                    cmd.Parameters.Add("@FechaAutorizacion", SqlDbType.DateTime).Value = request.FechaAutorizacion;
                    cmd.Parameters.Add("@CodigoTipoCriterio", SqlDbType.VarChar).Value = request.CodigoTipoCriterio;
                    cmd.Parameters.Add("@InicioVigencia", SqlDbType.DateTime).Value = request.InicioVigencia;
                    cmd.Parameters.Add("@FinVigencia", SqlDbType.DateTime).Value = request.FinVigencia;
                    cmd.Parameters.Add("@CodigoCondicion", SqlDbType.VarChar).Value = request.CodigoCondicion;                    
                    cmd.Parameters.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = request.UsuarioCreacion;
                    cmd.Parameters.Add("@FechaHoraCreacion", SqlDbType.DateTime).Value = request.FechaHoraCreacion;
                    cmd.Parameters.Add("@EstadoRegistro", SqlDbType.VarChar).Value = request.EstadoRegistro;
                    cmd.Parameters.Add("@CodigoAcuerdoComercialEscalonado", DbType.Int32).Direction = ParameterDirection.InputOutput;

                    result = cmd.ExecuteNonQuery();
                    codigoAcuerdoComercialEscalonado = (int)cmd.Parameters["@CodigoAcuerdoComercialEscalonado"].Value;

                    SqlHelper.CloseConnection(conexion);
                }
            }
            return codigoAcuerdoComercialEscalonado;
        }

        public int ActualizarAcuerdoComercialEscalonado(ActualizaAcuerdoComercialEscalonadoBE request)
        {
            int result;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoAcuerdoComercialEscalonado", request.CodigoAcuerdoComercialEscalonado);
                parametrosIn.Add("@Estado", request.Estado);
                parametrosIn.Add("@CodigoLinea", request.CodigoLinea);
                parametrosIn.Add("@CodigoUsuarioAutorizador", request.CodigoUsuarioAutorizador);
                parametrosIn.Add("@FechaAutorizacion", request.FechaAutorizacion);
                parametrosIn.Add("@CodigoTipoCriterio", request.CodigoTipoCriterio);
                parametrosIn.Add("@InicioVigencia", request.InicioVigencia);
                parametrosIn.Add("@FinVigencia", request.FinVigencia);
                parametrosIn.Add("@CodigoCondicion", request.CodigoCondicion);
                parametrosIn.Add("@UsuarioActualizacion", request.UsuarioActualizacion);
                parametrosIn.Add("@FechaHoraActualizacion", request.FechaHoraActualizacion);
                parametrosIn.Add("@EstadoRegistro", request.EstadoRegistro);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_ACTUALIZAR_ACESCALONADO", conexion, parametrosIn, true))
                {
                    result = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return result;
        }

        public bool ModificarACEscalonadoSucursal(List<AcuerdoComercialEscalonadoSucursalBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoSucursal", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOSUCURSAL", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoSucursalTerminal(List<AcuerdoComercialEscalonadoSucursalTerminalBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoSucursalTerminal", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOSUCURSALTERMINAL", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoRA(List<AcuerdoComercialEscalonadoRABE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoRA", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADORA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoPuerto(List<AcuerdoComercialEscalonadoPuertoBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoPuerto", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOPUERTO", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoClienteBLMaster(List<AcuerdoComercialEscalonadoClienteBLMasterBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoClienteBLMaster", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOCLIENTEBLMASTER", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoAgenteBLMaster(List<AcuerdoComercialEscalonadoAgenteBLMasterBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoAgenteBLMaster", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOAGENTEBLMASTER", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoClienteBLHouse(List<AcuerdoComercialEscalonadoClienteBLHouseBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoClienteBLHouse", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOCLIENTEBLHOUSE", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoAgenteBLHouse(List<AcuerdoComercialEscalonadoAgenteBLHouseBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoAgenteBLHouse", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOAGENTEBLHOUSE", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoServicioNave(List<AcuerdoComercialEscalonadoServicioNaveBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoServicioNave", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOSERVICIONAVE", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoServicioBL(List<AcuerdoComercialEscalonadoServicioBLBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoServicioBL", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOSERVICIOBL", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoCarga(List<AcuerdoComercialEscalonadoCargaBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoCarga", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOCARGA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoTarifa(List<AcuerdoComercialEscalonadoTarifaBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoTarifa", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOTARIFA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoTarifaLigada(List<AcuerdoComercialEscalonadoTarifaLigadaBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoTarifaLigada", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOTARIFALIGADA", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public bool ModificarACEscalonadoTarifaPeriodo(List<AcuerdoComercialEscalonadoTarifaPeriodoBE> request)
        {
            int rows;

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoTarifaPeriodo", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_MODIFICAR_ACESCALONADOPERIODO", conexion, parametrosIn, true))
                {
                    rows = cmd.ExecuteNonQuery();
                    SqlHelper.CloseConnection(conexion);
                }
            }
            return rows > 0;
        }

        public List<AcuerdoComercialEscalonadoRABE> ValidarACEscalonadoRA(List<AcuerdoComercialEscalonadoRABE> request, string accion)
        {
            List<AcuerdoComercialEscalonadoRABE> aCLocalRABEList = new List<AcuerdoComercialEscalonadoRABE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@EstadoRegistro", true);
                parametrosIn.Add("@dtAcuerdoComercialEscalonadoRA", request.ToDataTable());

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_VALIDAR_ACESCALONADORA", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoRABE aCEscalonadoRABE = new AcuerdoComercialEscalonadoRABE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoRA = dr.IsDBNull(dr.GetOrdinal("CodigoRA")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRA")).Trim()
                            };

                            aCLocalRABEList.Add(aCEscalonadoRABE);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }
            return aCLocalRABEList;

        }

        #endregion

        public List<AcuerdoComercialLocalHistorialBE> ConsultarAcuerdoComericalLocalHistorial(ConsultaAcuerdoComercialLocalHistorialBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<AcuerdoComercialLocalHistorialBE> lstAClocalHistorial = new List<AcuerdoComercialLocalHistorialBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoAcuerdoComercialLocal", request.CodigoAcuerdoComercialLocal);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_ACLOCALHISTORIAL", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            AcuerdoComercialLocalHistorialBE aclocalHistorial = new AcuerdoComercialLocalHistorialBE()
                            {
                                CodigoAcuerdoComercialLocalHistorial = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocalHistorial")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocalHistorial")),
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                Usuario = dr.IsDBNull(dr.GetOrdinal("Usuario")) ? "" : dr.GetString(dr.GetOrdinal("Usuario")).Trim(),
                                FechaHora = dr.IsDBNull(dr.GetOrdinal("FechaHora")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHora")),
                                Accion = dr.IsDBNull(dr.GetOrdinal("Accion")) ? "" : dr.GetString(dr.GetOrdinal("Accion")).Trim(),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim()
                            };

                            lstAClocalHistorial.Add(aclocalHistorial);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstAClocalHistorial;

        }

        public List<AcuerdoComercialEscalonadoHistorialBE> ConsultarAcuerdoComercialEscalonadoHistorial(ConsultaAcuerdoComercialEscalonadoHistorialBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<AcuerdoComercialEscalonadoHistorialBE> lstACEscalonadoHistorial = new List<AcuerdoComercialEscalonadoHistorialBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", String.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", String.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoAcuerdoComercialEscalonado", request.CodigoAcuerdoComercialEscalonado);
                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_ACESCALONADOHISTORIAL", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoHistorialBE acEscalonadoHistorial = new AcuerdoComercialEscalonadoHistorialBE()
                            {
                                CodigoAcuerdoComercialEscalonadoHistorial = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonadoHistorial")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonadoHistorial")),
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                Usuario = dr.IsDBNull(dr.GetOrdinal("Usuario")) ? "" : dr.GetString(dr.GetOrdinal("Usuario")).Trim(),
                                FechaHora = dr.IsDBNull(dr.GetOrdinal("FechaHora")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHora")),
                                Accion = dr.IsDBNull(dr.GetOrdinal("Accion")) ? "" : dr.GetString(dr.GetOrdinal("Accion")).Trim(),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim()
                            };

                            lstACEscalonadoHistorial.Add(acEscalonadoHistorial);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstACEscalonadoHistorial;

        }

        public List<PesoVariableBE> ConsultarPesoVariable(ConsultaPesoVariableBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<PesoVariableBE> lstPesoVariable = new List<PesoVariableBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", string.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", string.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);
                parametrosIn.Add("@CodigoVariable", request.CodigoVariable);
                parametrosIn.Add("@Descripcion", string.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion);
                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_PESOVARIABLE", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            PesoVariableBE pesoVariable = new PesoVariableBE()
                            {
                                CodigoVariable = dr.IsDBNull(dr.GetOrdinal("CodigoVariable")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoVariable")),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")),
                                PesoVariable = dr.IsDBNull(dr.GetOrdinal("PesoVariable")) ? 0 : dr.GetInt32(dr.GetOrdinal("PesoVariable")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstPesoVariable.Add(pesoVariable);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstPesoVariable;

        }

        public List<SeguimientoAcuerdoComercialLocalBE> ConsultarSeguimientoAcuerdoComercialLocal(ConsultaSeguimientoAcuerdoComercialLocalBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<SeguimientoAcuerdoComercialLocalBE> lstAClocal = new List<SeguimientoAcuerdoComercialLocalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                int totRegs = 0;
                int cantRegs = 0;

                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_SEGUIMIENTO_ACLOCAL", conexion, true))
                {
                    SqlParameterCollection parametrosIn = cmd.Parameters;

                    parametrosIn.Add("@OrdenCampo", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo;
                    parametrosIn.Add("@OrdenOrientacion", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion;
                    parametrosIn.Add("@PaginaActual", SqlDbType.Int).Value = (object)request.PaginaActual ?? DBNull.Value;//request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual;
                    parametrosIn.Add("@NroRegistrosPorPagina", SqlDbType.Int).Value = (object)request.NroRegistrosPorPagina ?? DBNull.Value; //request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina;
                    parametrosIn.Add("@CodigoAcuerdoComercialLocal", SqlDbType.Int).Value = (object)request.CodigoAcuerdoComercialLocal ?? 0;
                    parametrosIn.Add("@CodigoLinea", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea;
                    parametrosIn.Add("@CodigoRA", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoRA) ? string.Empty : request.CodigoRA;
                    parametrosIn.Add("@CodigoCliente", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoCliente) ? string.Empty : request.CodigoCliente;
                    parametrosIn.Add("@CodigoContenedor", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoContenedor) ? string.Empty : request.CodigoContenedor;
                    parametrosIn.Add("@NumeroBL", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.NumeroBL) ? string.Empty : request.NumeroBL;
                    parametrosIn.Add("@CodigoRolSap", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.CodigoRol) ? string.Empty : request.CodigoRol;
                    parametrosIn.Add("@Estado", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Estado) ? string.Empty : request.Estado;
                    parametrosIn.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioCreacion) ? string.Empty : request.UsuarioCreacion;
                    parametrosIn.Add("@UsuarioAprobacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioAprobacion) ? string.Empty : request.UsuarioAprobacion;
                    parametrosIn.Add("@FechaInicio", SqlDbType.DateTime).Value = (object)request.FechaInicio ?? DBNull.Value;
                    parametrosIn.Add("@FechaFin", SqlDbType.DateTime).Value = (object)request.FechaFin ?? DBNull.Value;

                    parametrosIn.Add("@TotalRegistros", SqlDbType.Int).Direction = ParameterDirection.InputOutput;
                    parametrosIn["@TotalRegistros"].Value = totRegs;

                    parametrosIn.Add("@CantidadPaginas", SqlDbType.Int).Direction = ParameterDirection.InputOutput;
                    parametrosIn["@CantidadPaginas"].Value = cantRegs;

                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            SeguimientoAcuerdoComercialLocalBE aclocal = new SeguimientoAcuerdoComercialLocalBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                NroRA = dr.IsDBNull(dr.GetOrdinal("NroRA")) ? "" : dr.GetString(dr.GetOrdinal("NroRA")).Trim(),
                                Estado = dr.IsDBNull(dr.GetOrdinal("Estado")) ? "" : dr.GetString(dr.GetOrdinal("Estado")),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                            };

                            lstAClocal.Add(aclocal);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstAClocal;
        }

        public List<SeguimientoAcuerdoComercialEscalonadoBE> ConsultarSeguimientoAcuerdoComercialEscalonado(ConsultaSeguimientoAcuerdoComercialEscalonadoBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<SeguimientoAcuerdoComercialEscalonadoBE> lstSeguimientoAcuerdoComercialEscalonado = new List<SeguimientoAcuerdoComercialEscalonadoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                int totRegs = 0;
                int cantRegs = 0;

                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_SEGUIMIENTO_ACESCALONADO", conexion, true))
                {
                    SqlParameterCollection parametrosIn = cmd.Parameters;

                    parametrosIn.Add("@OrdenCampo", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo;
                    parametrosIn.Add("@OrdenOrientacion", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion;
                    parametrosIn.Add("@PaginaActual", SqlDbType.VarChar).Value = (object)request.PaginaActual ?? DBNull.Value;
                    parametrosIn.Add("@NroRegistrosPorPagina", SqlDbType.VarChar).Value = (object)request.NroRegistrosPorPagina ?? request.NroRegistrosPorPagina;

                    parametrosIn.Add("@CodigoAcuerdoComercialEscalonado", SqlDbType.Int).Value = (object)request.CodigoAcuerdoComercialEscalonado ?? 0;
                    parametrosIn.Add("@CodigoLinea", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea;
                    parametrosIn.Add("@CodigoRA", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoRA) ? string.Empty : request.CodigoRA;
                    parametrosIn.Add("@CodigoCliente", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoCliente) ? string.Empty : request.CodigoCliente;
                    parametrosIn.Add("@CodigoContenedor", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoContenedor) ? string.Empty : request.CodigoContenedor;

                    parametrosIn.Add("@NumeroBL", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.NumeroBL) ? string.Empty : request.NumeroBL;
                    parametrosIn.Add("@CodigoRolSap", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoRol) ? string.Empty : request.CodigoRol;

                    parametrosIn.Add("@Estado", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.Estado) ? string.Empty : request.Estado;
                    parametrosIn.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.UsuarioCreacion) ? string.Empty : request.UsuarioCreacion;
                    parametrosIn.Add("@UsuarioAprobacion", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.UsuarioAprobacion) ? string.Empty : request.UsuarioAprobacion;

                    parametrosIn.Add("@FechaInicio", SqlDbType.DateTime).Value = (object)request.FechaInicio ?? DBNull.Value;
                    parametrosIn.Add("@FechaFin", SqlDbType.DateTime).Value = (object)request.FechaFin ?? DBNull.Value;

                    parametrosIn.Add("@TotalRegistros", SqlDbType.Int).Direction = ParameterDirection.InputOutput;
                    parametrosIn["@TotalRegistros"].Value = totRegs;

                    parametrosIn.Add("@CantidadPaginas", SqlDbType.Int).Direction = ParameterDirection.InputOutput;
                    parametrosIn["@CantidadPaginas"].Value = cantRegs;

                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            SeguimientoAcuerdoComercialEscalonadoBE seguimientoAcuerdoComercialEscalonado = new SeguimientoAcuerdoComercialEscalonadoBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                NroRA = dr.IsDBNull(dr.GetOrdinal("NroRA")) ? "" : dr.GetString(dr.GetOrdinal("NroRA")),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                Estado = dr.IsDBNull(dr.GetOrdinal("Estado")) ? "" : dr.GetString(dr.GetOrdinal("Estado")).Trim()
                            };

                            lstSeguimientoAcuerdoComercialEscalonado.Add(seguimientoAcuerdoComercialEscalonado);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstSeguimientoAcuerdoComercialEscalonado;

        }


        public List<TipoContenedorExternoBE> ConsultarTipoContenedorExterno(ConsultaTipoContenedorExternoBE request, out int totalRegistros, out int cantidadPaginas)
        {
            List<TipoContenedorExternoBE> lstTipoContenedorExterno = new List<TipoContenedorExternoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();
                int totRegs = 0;
                int cantRegs = 0;

                parametrosIn.Add("@OrdenCampo", string.IsNullOrEmpty(request.OrdenCampo) ? string.Empty : request.OrdenCampo);
                parametrosIn.Add("@OrdenOrientacion", string.IsNullOrEmpty(request.OrdenOrientacion) ? string.Empty : request.OrdenOrientacion);
                parametrosIn.Add("@PaginaActual", request.PaginaActual == null ? new Nullable<int>() : request.PaginaActual);
                parametrosIn.Add("@NroRegistrosPorPagina", request.NroRegistrosPorPagina == null ? new Nullable<int>() : request.NroRegistrosPorPagina);

                parametrosIn.Add("@CodigoTipoContenedor", string.IsNullOrEmpty(request.CodigoTipoContenedor) ? string.Empty : request.CodigoTipoContenedor);
                parametrosIn.Add("@CodigoClaseContenedor", string.IsNullOrEmpty(request.CodigoClaseContenedor) ? string.Empty : request.CodigoClaseContenedor);
                parametrosIn.Add("@CodigoEquivalencia", string.IsNullOrEmpty(request.CodigoEquivalencia) ? string.Empty : request.CodigoEquivalencia);

                parametrosOut.Add("@TotalRegistros", totRegs);
                parametrosOut.Add("@CantidadPaginas", cantRegs);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_TIPOCONTENEDOREXTERNO", conexion, parametrosIn, true, parametrosOut))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TipoContenedorExternoBE tipoContenedorExterno = new TipoContenedorExternoBE()
                            {
                                CodigoTipoContenedorExterno = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedorExterno")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTipoContenedorExterno")),
                                CodigoClaseContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClaseContenedor")).Trim(),
                                ClaseContenedor = dr.IsDBNull(dr.GetOrdinal("ClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("ClaseContenedor")).Trim(),
                                CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor")).Trim(),
                                TipoContenedor = dr.IsDBNull(dr.GetOrdinal("TipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("TipoContenedor")).Trim(),
                                CodigoEquivalencia = dr.IsDBNull(dr.GetOrdinal("CodigoEquivalencia")) ? "" : dr.GetString(dr.GetOrdinal("CodigoEquivalencia")).Trim(),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstTipoContenedorExterno.Add(tipoContenedorExterno);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    totalRegistros = Int32.Parse(cmd.Parameters["@TotalRegistros"].Value.ToString());
                    cantidadPaginas = Int32.Parse(cmd.Parameters["@CantidadPaginas"].Value.ToString());
                }
            }

            return lstTipoContenedorExterno;

        }


        public bool InsertarTipoContenedorExterno(ActualizarTipoContenedorExternoBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_TIPOCONTENEDOREXTERNO", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTipoContenedorExterno", SqlDbType.Int).Value = request.CodigoTipoContenedorExterno;
                parametrosIn.Add("@CodigoClaseContenedor", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoClaseContenedor) ? string.Empty : request.CodigoClaseContenedor;
                parametrosIn.Add("@CodigoTipoContenedor", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoTipoContenedor) ? string.Empty : request.CodigoTipoContenedor;
                parametrosIn.Add("@CodigoEquivalencia", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoEquivalencia) ? string.Empty : request.CodigoEquivalencia;
                parametrosIn.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.UsuarioCreacion) ? string.Empty : request.UsuarioCreacion;
                parametrosIn.Add("@FechaHoraCreacion", SqlDbType.DateTime).Value = request.FechaHoraCreacion == null ? DateTime.Now : request.FechaHoraCreacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public bool ActualizarTipoContenedorExterno(ActualizarTipoContenedorExternoBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ACTUALIZAR_TIPOCONTENEDOREXTERNO", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTipoContenedorExterno", SqlDbType.Int).Value = request.CodigoTipoContenedorExterno;
                parametrosIn.Add("@CodigoClaseContenedor", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoClaseContenedor) ? string.Empty : request.CodigoClaseContenedor;
                parametrosIn.Add("@CodigoTipoContenedor", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoTipoContenedor) ? string.Empty : request.CodigoTipoContenedor;
                parametrosIn.Add("@CodigoEquivalencia", SqlDbType.VarChar).Value = string.IsNullOrEmpty(request.CodigoEquivalencia) ? string.Empty : request.CodigoEquivalencia;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;
                parametrosIn.Add("@FechaHoraActualizacion", SqlDbType.DateTime).Value = request.FechaHoraActualizacion == null ? DateTime.Now : request.FechaHoraActualizacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public bool EliminarTipoContenedorExterno(EliminarTipoContenedorExternoBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ELIMINA_TIPOCONTENEDOREXTERNO", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTipoContenedorExterno", SqlDbType.Int).Value = request.CodigoTipoContenedorExterno;
                parametrosIn.Add("@CodigoClaseContenedor", SqlDbType.Int).Value = string.IsNullOrEmpty(request.CodigoClaseContenedor) ? string.Empty : request.CodigoClaseContenedor;
                parametrosIn.Add("@CodigoTipoContenedor", SqlDbType.Int).Value = string.IsNullOrEmpty(request.CodigoTipoContenedor) ? string.Empty : request.CodigoTipoContenedor;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.Int).Value = string.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }



        public List<TipoContenedorBE> ConsultarTipoContenedor()
        {
            List<TipoContenedorBE> lstTipoContenedor = new List<TipoContenedorBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_TIPOCONTENEDOR", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TipoContenedorBE tipoContenedor = new TipoContenedorBE()
                            {
                                CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor")).Trim(),
                                CodigoClaseContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClaseContenedor")).Trim(),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim(),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstTipoContenedor.Add(tipoContenedor);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstTipoContenedor;

        }

        public bool InsertarTipoContenedor(ActualizarTipoContenedorBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_TIPOCONTENEDOR", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTipoContenedor", SqlDbType.Int).Value = request.CodigoTipoContenedor;
                parametrosIn.Add("@CodigoClaseContenedor", SqlDbType.Int).Value = request.CodigoClaseContenedor;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;
                parametrosIn.Add("@UsuarioCreacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioCreacion) ? string.Empty : request.UsuarioCreacion;
                parametrosIn.Add("@FechaHoraCreacion", SqlDbType.DateTime).Value = request.FechaHoraCreacion == null ? DateTime.Now : request.FechaHoraCreacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public bool ActualizarTipoContenedor(ActualizarTipoContenedorBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ACTUALIZAR_TIPOCONTENEDOR", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTipoContenedor", SqlDbType.Int).Value = request.CodigoTipoContenedor;
                parametrosIn.Add("@CodigoClaseContenedor", SqlDbType.Int).Value = request.CodigoClaseContenedor;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;
                parametrosIn.Add("@FechaHoraActualizacion", SqlDbType.DateTime).Value = request.FechaHoraActualizacion == null ? DateTime.Now : request.FechaHoraActualizacion;
                parametrosIn.Add("@EstadoRegistro", SqlDbType.Bit).Value = request.EstadoRegistro;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public bool EliminarTipoContenedor(EliminarTipoContenedorBE request)
        {

            int result;

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_ELIMINA_TIPOCONTENEDOR", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoTipoContenedor", SqlDbType.Int).Value = request.CodigoTipoContenedor;
                parametrosIn.Add("@CodigoClaseContenedor", SqlDbType.Int).Value = request.CodigoClaseContenedor;
                parametrosIn.Add("@UsuarioActualizacion", SqlDbType.Int).Value = String.IsNullOrEmpty(request.UsuarioActualizacion) ? string.Empty : request.UsuarioActualizacion;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result > 0;
        }

        public List<ClaseContenedorBE> ConsultarClaseContenedor()
        {
            List<ClaseContenedorBE> lstClaseContenedor = new List<ClaseContenedorBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_CLASECONTENEDOR", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ClaseContenedorBE claseContenedor = new ClaseContenedorBE()
                            {
                                CodigoClaseContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClaseContenedor")).Trim(),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim(),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim(),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim(),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstClaseContenedor.Add(claseContenedor);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstClaseContenedor;

        }

        public List<DetalleAcuerdoComercialLocalBE> ConsultarDetalleAcuerdoComercialLocal(ConsultaDetalleAcuerdoComercialLocalBE request)
        {
            List<DetalleAcuerdoComercialLocalBE> lsDetalletAcuerdoComercialLocal = new List<DetalleAcuerdoComercialLocalBE>();
            List<AcuerdoComercialLocalSucursalConsultaBE> lstAcuerdoComercialLocalSucursal = new List<AcuerdoComercialLocalSucursalConsultaBE>();
            List<AcuerdoComercialLocalSucursalTerminalConsultaBE> lstAcuerdoComercialLocalSucursalTerminal = new List<AcuerdoComercialLocalSucursalTerminalConsultaBE>();
            List<AcuerdoComercialLocalRABE> lstAcuerdoComercialLocalRA = new List<AcuerdoComercialLocalRABE>();
            List<AcuerdoComercialLocalPuertoConsultaBE> lstAcuerdoComercialLocalPuerto = new List<AcuerdoComercialLocalPuertoConsultaBE>();
            List<AcuerdoComercialLocalClienteBLMasterConsultaBE> lstAcuerdoComercialLocalClienteBLMaster = new List<AcuerdoComercialLocalClienteBLMasterConsultaBE>();
            List<AcuerdoComercialLocalAgenteBLMasterConsultaBE> lstAcuerdoComercialLocalAgenteBLMaster = new List<AcuerdoComercialLocalAgenteBLMasterConsultaBE>();
            List<AcuerdoComercialLocalClienteBLHouseConsultaBE> lstAcuerdoComercialLocalClienteBLHouse = new List<AcuerdoComercialLocalClienteBLHouseConsultaBE>();
            List<AcuerdoComercialLocalAgenteBLHouseConsultaBE> lstAcuerdoComercialLocalAgenteBLHouse = new List<AcuerdoComercialLocalAgenteBLHouseConsultaBE>();
            List<AcuerdoComercialLocalServicioNaveConsultaBE> lstAcuerdoComercialLocalServicioNave = new List<AcuerdoComercialLocalServicioNaveConsultaBE>();
            List<AcuerdoComercialLocalServicioBLConsultaBE> lstAcuerdoComercialLocalServicioBL = new List<AcuerdoComercialLocalServicioBLConsultaBE>();
            List<AcuerdoComercialLocalTipoContenedorBE> lstAcuerdoComercialLocalTipoContenedor = new List<AcuerdoComercialLocalTipoContenedorBE>();
            List<AcuerdoComercialLocalCargaBE> lstAcuerdoComercialLocalCarga = new List<AcuerdoComercialLocalCargaBE>();
            List<AcuerdoComercialLocalTarifaBE> lstAcuerdoComercialLocalTarifa = new List<AcuerdoComercialLocalTarifaBE>();
            List<AcuerdoComercialLocalTarifaLigadaConsultaBE> lstAcuerdoComercialLocalTarifaLigada = new List<AcuerdoComercialLocalTarifaLigadaConsultaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoAcuerdoComercialLocal", request.CodigoAcuerdoComercialLocal);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_DETALLE_ACLOCAL", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleAcuerdoComercialLocalBE acuerdoComercialLocal = new DetalleAcuerdoComercialLocalBE();

                            acuerdoComercialLocal.CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal"));
                            acuerdoComercialLocal.Estado = dr.IsDBNull(dr.GetOrdinal("Estado")) ? "" : dr.GetString(dr.GetOrdinal("Estado")).Trim();
                            acuerdoComercialLocal.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim();
                            acuerdoComercialLocal.CodigoUsuarioAutorizador = dr.IsDBNull(dr.GetOrdinal("CodigoUsuarioAutorizador")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUsuarioAutorizador")).Trim();
                            acuerdoComercialLocal.FechaAutorizacion = dr.GetDateTime(dr.GetOrdinal("FechaAutorizacion"));
                            acuerdoComercialLocal.CodigoCondicion = dr.IsDBNull(dr.GetOrdinal("CodigoCondicion")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCondicion")).Trim();                            
                            acuerdoComercialLocal.CodigoTipoCriterio = dr.IsDBNull(dr.GetOrdinal("CodigoTipoCriterio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoCriterio")).Trim();
                            acuerdoComercialLocal.InicioVigencia = dr.IsDBNull(dr.GetOrdinal("InicioVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("InicioVigencia"));
                            acuerdoComercialLocal.FinVigencia = dr.IsDBNull(dr.GetOrdinal("FinVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FinVigencia"));
                            acuerdoComercialLocal.UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim();
                            acuerdoComercialLocal.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                            acuerdoComercialLocal.UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim();
                            acuerdoComercialLocal.FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion"));
                            acuerdoComercialLocal.EstadoRegistro = dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"));

                            lsDetalletAcuerdoComercialLocal.Add(acuerdoComercialLocal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalSucursalConsultaBE acLocalSucursal = new AcuerdoComercialLocalSucursalConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim()
                            };

                            lstAcuerdoComercialLocalSucursal.Add(acLocalSucursal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalSucursalTerminalConsultaBE acLocalSucursalTerminal = new AcuerdoComercialLocalSucursalTerminalConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim(),
                                CodigoTerminalPortuario = dr.IsDBNull(dr.GetOrdinal("CodigoTerminalPortuario")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTerminalPortuario")).Trim()
                            };

                            lstAcuerdoComercialLocalSucursalTerminal.Add(acLocalSucursalTerminal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalRABE aclocalRABE = new AcuerdoComercialLocalRABE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoRA = dr.IsDBNull(dr.GetOrdinal("CodigoRA")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRA")).Trim()
                            };

                            lstAcuerdoComercialLocalRA.Add(aclocalRABE);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalPuertoConsultaBE acLocalPuerto = new AcuerdoComercialLocalPuertoConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto")).Trim(),
                                CodigoTipoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoTipoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoPuerto")).Trim()
                            };

                            lstAcuerdoComercialLocalPuerto.Add(acLocalPuerto);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalClienteBLMasterConsultaBE acLocalClienteBLMaster = new AcuerdoComercialLocalClienteBLMasterConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCliente")).Trim(),
                                CodigoDocumentoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoCliente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialLocalClienteBLMaster.Add(acLocalClienteBLMaster);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalAgenteBLMasterConsultaBE acLocalAgenteBLMaster = new AcuerdoComercialLocalAgenteBLMasterConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoAgente")).Trim(),
                                CodigoDocumentoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoAgente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialLocalAgenteBLMaster.Add(acLocalAgenteBLMaster);
                        }


                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalClienteBLHouseConsultaBE acLocalClienteBLHouse = new AcuerdoComercialLocalClienteBLHouseConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCliente")).Trim(),
                                CodigoDocumentoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoCliente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialLocalClienteBLHouse.Add(acLocalClienteBLHouse);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalAgenteBLHouseConsultaBE acLocalAgenteBLHouse = new AcuerdoComercialLocalAgenteBLHouseConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoAgente")).Trim(),
                                CodigoDocumentoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoAgente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialLocalAgenteBLHouse.Add(acLocalAgenteBLHouse);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalServicioNaveConsultaBE acLocalServicioNave = new AcuerdoComercialLocalServicioNaveConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoServicio = dr.IsDBNull(dr.GetOrdinal("CodigoServicio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicio")).Trim()
                            };

                            lstAcuerdoComercialLocalServicioNave.Add(acLocalServicioNave);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalServicioBLConsultaBE acLocalServicioBLBE = new AcuerdoComercialLocalServicioBLConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoServicio = dr.IsDBNull(dr.GetOrdinal("CodigoServicio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicio")).Trim()
                            };

                            lstAcuerdoComercialLocalServicioBL.Add(acLocalServicioBLBE);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalTipoContenedorBE acLocalTipoContenedorBE = new AcuerdoComercialLocalTipoContenedorBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoClaseContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClaseContenedor")).Trim(),
                                CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor")).Trim()
                            };

                            lstAcuerdoComercialLocalTipoContenedor.Add(acLocalTipoContenedorBE);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalCargaBE acLocalCarga = new AcuerdoComercialLocalCargaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoNave = dr.IsDBNull(dr.GetOrdinal("CodigoNave")) ? "" : dr.GetString(dr.GetOrdinal("CodigoNave")).Trim(),
                                NumeroViaje = dr.IsDBNull(dr.GetOrdinal("NumeroViaje")) ? "" : dr.GetString(dr.GetOrdinal("NumeroViaje")).Trim(),
                                PuertoOrigen = dr.IsDBNull(dr.GetOrdinal("PuertoOrigen")) ? "" : dr.GetString(dr.GetOrdinal("PuertoOrigen")).Trim(),
                                PuertoEmbarque = dr.IsDBNull(dr.GetOrdinal("PuertoEmbarque")) ? "" : dr.GetString(dr.GetOrdinal("PuertoEmbarque")).Trim(),
                                PuertoDestino = dr.IsDBNull(dr.GetOrdinal("PuertoDestino")) ? "" : dr.GetString(dr.GetOrdinal("PuertoDestino")).Trim(),
                                DestinoFinal = dr.IsDBNull(dr.GetOrdinal("DestinoFinal")) ? "" : dr.GetString(dr.GetOrdinal("DestinoFinal")).Trim(),
                                CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim(),
                                NumeroBL = dr.IsDBNull(dr.GetOrdinal("NumeroBL")) ? "" : dr.GetString(dr.GetOrdinal("NumeroBL")).Trim(),
                                CodigoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoContenedor")).Trim()
                            };

                            lstAcuerdoComercialLocalCarga.Add(acLocalCarga);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalTarifaBE acLocalTarifa = new AcuerdoComercialLocalTarifaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                CodigoTipoDescuento = dr.IsDBNull(dr.GetOrdinal("CodigoTipoDescuento")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoDescuento")).Trim(),
                                ValorDescuento = dr.IsDBNull(dr.GetOrdinal("ValorDescuento")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("ValorDescuento")),
                                CodigoMonedaAcuerdo = dr.IsDBNull(dr.GetOrdinal("CodigoMonedaAcuerdo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMonedaAcuerdo")).Trim(),
                                MontoAcuerdo = dr.IsDBNull(dr.GetOrdinal("MontoAcuerdo")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("MontoAcuerdo"))
                            };

                            lstAcuerdoComercialLocalTarifa.Add(acLocalTarifa);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialLocalTarifaLigadaConsultaBE acLocalTarifaLigada = new AcuerdoComercialLocalTarifaLigadaConsultaBE()
                            {
                                CodigoAcuerdoComercialLocal = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialLocal")),
                                CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal")),
                                CodigoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigadaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigadaLocal")),
                                CodigoConfiguracionTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")).Trim(),
                                Porcentaje = dr.IsDBNull(dr.GetOrdinal("Porcentaje")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Porcentaje")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Monto"))
                            };

                            lstAcuerdoComercialLocalTarifaLigada.Add(acLocalTarifaLigada);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    foreach (var acLocal in lsDetalletAcuerdoComercialLocal)
                    {

                        acLocal.ListaAcuerdoComercialLocalSucursal = lstAcuerdoComercialLocalSucursal.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalSucursalTerminal = lstAcuerdoComercialLocalSucursalTerminal.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalRA = lstAcuerdoComercialLocalRA.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalPuerto = lstAcuerdoComercialLocalPuerto.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalClienteBLMaster = lstAcuerdoComercialLocalClienteBLMaster.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalAgenteBLMaster = lstAcuerdoComercialLocalAgenteBLMaster.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalClienteBLHouse = lstAcuerdoComercialLocalClienteBLHouse.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalAgenteBLHouse = lstAcuerdoComercialLocalAgenteBLHouse.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalServicioNave = lstAcuerdoComercialLocalServicioNave.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalServicioBL = lstAcuerdoComercialLocalServicioBL.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalTipoContenedor = lstAcuerdoComercialLocalTipoContenedor.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalCarga = lstAcuerdoComercialLocalCarga.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalTarifa = lstAcuerdoComercialLocalTarifa.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();
                        acLocal.ListaAcuerdoComercialLocalTarifaLigada = lstAcuerdoComercialLocalTarifaLigada.Where(x => x.CodigoAcuerdoComercialLocal == acLocal.CodigoAcuerdoComercialLocal).ToList();


                    }


                }


            }

            return lsDetalletAcuerdoComercialLocal;

        }

        public List<GrupoPuertoExternoBE> ConsultarGrupoPuertoTodos()
        {
            List<GrupoPuertoExternoBE> grupoPuerto = new List<GrupoPuertoExternoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_GRUPOPUERTOEXTERNO_ALL", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            GrupoPuertoExternoBE grupoPuertoDetalle = new GrupoPuertoExternoBE()
                            {
                                CodigoGrupoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoGrupoPuerto")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoGrupoPuerto")),
                                NombreGrupoPuerto = dr.IsDBNull(dr.GetOrdinal("NombreGrupoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("NombreGrupoPuerto")),
                            };

                            grupoPuerto.Add(grupoPuertoDetalle);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return grupoPuerto;

        }

        public List<PuertoBE> ConsultarPuertoTodos()
        {
            List<PuertoBE> puertoList = new List<PuertoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_PUERTO_TODOS", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            PuertoBE puerto = new PuertoBE()
                            {
                                Codigo = dr.IsDBNull(dr.GetOrdinal("Codigo")) ? "" : dr.GetString(dr.GetOrdinal("Codigo")),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")),
                                CodigoPais = dr.IsDBNull(dr.GetOrdinal("CodigoPais")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPais")),
                                CodigoInternacional = dr.IsDBNull(dr.GetOrdinal("CodigoInternacional")) ? "" : dr.GetInt16(dr.GetOrdinal("CodigoInternacional")).ToString(),
                            };

                            puertoList.Add(puerto);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return puertoList;
        }

        //public List<ClienteBE> ObtenerDatosCliente(List<GenericBE> request)
        //{
        //    List<ClienteBE> lstCliente = new List<ClienteBE>();

        //    using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
        //    {

        //        Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
        //        parametrosIn.Add("@listaGenerica", request.ToDataTable());


        //        using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_OBTENER_DATOS_CLIENTE", conexion, parametrosIn, true))
        //        {
        //            using (IDataReader dr = cmd.ExecuteReader())
        //            {
        //                while (dr.Read())
        //                {
        //                    ClienteBE cliente = new ClienteBE()
        //                    {
        //                        CodigoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCliente")).Trim(),
        //                        Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")).Trim(),
        //                        CodigoClienteSAP = dr.IsDBNull(dr.GetOrdinal("CodigoClienteSAP")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClienteSAP")).Trim()
        //                    };

        //                    lstCliente.Add(cliente);
        //                }
        //                SqlHelper.CloseConnection(conexion);
        //            }

        //        }
        //    }

        //    return lstCliente;
        //}

        public List<PuertoBE> ObtenerDatosPuerto(List<GenericBE> request)
        {
            List<PuertoBE> lstPuerto = new List<PuertoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@listaGenerica", request.ToDataTable());


                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_OBTENER_DATOS_PUERTO", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            PuertoBE Puerto = new PuertoBE()
                            {
                                Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto")).Trim(),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")).Trim(),
                                CodigoInternacional = dr.IsDBNull(dr.GetOrdinal("CodigoInternacional")) ? "" : dr.GetInt16(dr.GetOrdinal("CodigoInternacional")).ToString().Trim(),
                            };

                            lstPuerto.Add(Puerto);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstPuerto;
        }

        public List<ServicioBE> ObtenerDatosServicio(List<GenericBE> request)
        {
            List<ServicioBE> lstServicio = new List<ServicioBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@listaGenerica", request.ToDataTable());


                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_OBTENER_DATOS_SERVICIO", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ServicioBE Servicio = new ServicioBE()
                            {
                                CodigoServicio = dr.IsDBNull(dr.GetOrdinal("CodigoServicio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicio")).Trim(),
                                NombreServicio = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")).Trim()

                            };

                            lstServicio.Add(Servicio);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstServicio;
        }

        public int InsertarAcuerdoComercialLocalHistorial(InsertarAcuerdoComercialLocalHistorialBE request)
        {

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));
            int result = 0;

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_ACLOCALHISTORIAL", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoAcuerdoComercialLocal", SqlDbType.Int).Value = request.CodigoAcuerdoComercialLocal;
                parametrosIn.Add("@Usuario", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Usuario) ? string.Empty : request.Usuario;
                parametrosIn.Add("@FechaHora", SqlDbType.DateTime).Value = request.FechaHora;
                parametrosIn.Add("@Accion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Accion) ? string.Empty : request.Accion;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result;
        }

        public int InsertarAcuerdoComercialEscalonadoHistorial(InsertarAcuerdoComercialEscalonadoHistorialBE request)
        {

            SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB"));
            int result = 0;

            using (SqlCommand cmd = SqlHelper.CreateCommand("USP_INSERTAR_ACESCALONADOHISTORIAL", conexion, true))
            {

                SqlParameterCollection parametrosIn = cmd.Parameters;

                parametrosIn.Add("@CodigoAcuerdoComercialEscalonado", SqlDbType.Int).Value = request.CodigoAcuerdoComercialEscalonado;
                parametrosIn.Add("@Usuario", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Usuario) ? string.Empty : request.Usuario;
                parametrosIn.Add("@FechaHora", SqlDbType.DateTime).Value = request.FechaHora;
                parametrosIn.Add("@Accion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Accion) ? string.Empty : request.Accion;
                parametrosIn.Add("@Descripcion", SqlDbType.VarChar).Value = String.IsNullOrEmpty(request.Descripcion) ? string.Empty : request.Descripcion;

                result = cmd.ExecuteNonQuery();

                SqlHelper.CloseConnection(conexion);

            }

            return result;
        }

        public List<DetalleTarifaLocalBE> ConsultarResumenDetalleTarifaLocal(ConsultaDetalleTarifaLocalBE request)
        {
            List<DetalleTarifaLocalBE> lstDetalleTarifaLocal = new List<DetalleTarifaLocalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoTarifaLocal", request.CodigoTarifaLocal);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_DETALLE_TARIFALOCAL_RESUMEN", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleTarifaLocalBE detalleTarifaLocal = new DetalleTarifaLocalBE();

                            detalleTarifaLocal.CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal"));
                            detalleTarifaLocal.CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim();
                            detalleTarifaLocal.CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim();
                            detalleTarifaLocal.CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim();
                            detalleTarifaLocal.CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim();
                            detalleTarifaLocal.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim();
                            detalleTarifaLocal.Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? 0 : dr.GetDecimal(dr.GetOrdinal("Monto"));
                            detalleTarifaLocal.CodigoUsuarioAutorizador = dr.IsDBNull(dr.GetOrdinal("CodigoUsuarioAutorizador")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUsuarioAutorizador")).Trim();
                            detalleTarifaLocal.UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim();
                            detalleTarifaLocal.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                            detalleTarifaLocal.UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim();
                            detalleTarifaLocal.FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion"));
                            detalleTarifaLocal.EstadoRegistro = dr.GetBoolean(dr.GetOrdinal("EstadoRegistro")) ? EstadoRegistro.Activo.GetDescription() : EstadoRegistro.Inactivo.GetDescription();

                            lstDetalleTarifaLocal.Add(detalleTarifaLocal);
                        }

                    }
                }

                return lstDetalleTarifaLocal;

            }
        }

        public List<DetalleAcuerdoComercialEscalonadoBE> ConsultarDetalleAcuerdoComercialEscalonado(ConsultaDetalleAcuerdoComercialEscalonadoBE request)
        {
            List<DetalleAcuerdoComercialEscalonadoBE> lsDetalletAcuerdoComercialEscalonado = new List<DetalleAcuerdoComercialEscalonadoBE>();
            List<AcuerdoComercialEscalonadoSucursalConsultaBE> lstAcuerdoComercialEscalonadoSucursal = new List<AcuerdoComercialEscalonadoSucursalConsultaBE>();
            List<AcuerdoComercialEscalonadoSucursalTerminalConsultaBE> lstAcuerdoComercialEscalonadoSucursalTerminal = new List<AcuerdoComercialEscalonadoSucursalTerminalConsultaBE>();
            List<AcuerdoComercialEscalonadoRAConsultaBE> lstAcuerdoComercialEscalonadoRA = new List<AcuerdoComercialEscalonadoRAConsultaBE>();
            List<AcuerdoComercialEscalonadoPuertoConsultaBE> lstAcuerdoComercialEscalonadoPuerto = new List<AcuerdoComercialEscalonadoPuertoConsultaBE>();
            List<AcuerdoComercialEscalonadoClienteBLMasterConsultaBE> lstAcuerdoComercialEscalonadoClienteBLMaster = new List<AcuerdoComercialEscalonadoClienteBLMasterConsultaBE>();
            List<AcuerdoComercialEscalonadoAgenteBLMasterConsultaBE> lstAcuerdoComercialEscalonadoAgenteBLMaster = new List<AcuerdoComercialEscalonadoAgenteBLMasterConsultaBE>();
            List<AcuerdoComercialEscalonadoClienteBLHouseConsultaBE> lstAcuerdoComercialEscalonadoClienteBLHouse = new List<AcuerdoComercialEscalonadoClienteBLHouseConsultaBE>();
            List<AcuerdoComercialEscalonadoAgenteBLHouseConsultaBE> lstAcuerdoComercialEscalonadoAgenteBLHouse = new List<AcuerdoComercialEscalonadoAgenteBLHouseConsultaBE>();
            List<AcuerdoComercialEscalonadoServicioNaveConsultaBE> lstAcuerdoComercialEscalonadoServicioNave = new List<AcuerdoComercialEscalonadoServicioNaveConsultaBE>();
            List<AcuerdoComercialEscalonadoServicioBLConsultaBE> lstAcuerdoComercialEscalonadoServicioBL = new List<AcuerdoComercialEscalonadoServicioBLConsultaBE>();
            List<AcuerdoComercialEscalonadoCargaConsultaBE> lstAcuerdoComercialEscalonadoCarga = new List<AcuerdoComercialEscalonadoCargaConsultaBE>();
            List<AcuerdoComercialEscalonadoTarifaConsultaBE> lstAcuerdoComercialEscalonadoTarifa = new List<AcuerdoComercialEscalonadoTarifaConsultaBE>();
            List<AcuerdoComercialEscalonadoTarifaPeriodoConsultaBE> lstAcuerdoComercialEscalonadoTarifaPeriodo = new List<AcuerdoComercialEscalonadoTarifaPeriodoConsultaBE>();
            List<AcuerdoComercialEscalonadoTarifaLigadaConsultaBE> lstAcuerdoComercialEscalonadoTarifaLigada = new List<AcuerdoComercialEscalonadoTarifaLigadaConsultaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoAcuedoComercialEscalonado", request.CodigoAcuerdoComercialEscalonado);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_DETALLE_ACESCALONADO", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleAcuerdoComercialEscalonadoBE acuerdoComercialEscalonado = new DetalleAcuerdoComercialEscalonadoBE();

                            acuerdoComercialEscalonado.CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado"));

                            acuerdoComercialEscalonado.Estado = dr.IsDBNull(dr.GetOrdinal("Estado")) ? "" : dr.GetString(dr.GetOrdinal("Estado")).Trim();
                            acuerdoComercialEscalonado.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim();
                            acuerdoComercialEscalonado.CodigoUsuarioAutorizador = dr.IsDBNull(dr.GetOrdinal("CodigoUsuarioAutorizador")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUsuarioAutorizador")).Trim();
                            acuerdoComercialEscalonado.FechaAutorizacion = dr.GetDateTime(dr.GetOrdinal("FechaAutorizacion"));
                            acuerdoComercialEscalonado.CodigoTipoCriterio = dr.IsDBNull(dr.GetOrdinal("CodigoTipoCriterio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoCriterio")).Trim();
                            acuerdoComercialEscalonado.InicioVigencia = dr.IsDBNull(dr.GetOrdinal("InicioVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("InicioVigencia"));
                            acuerdoComercialEscalonado.FinVigencia = dr.IsDBNull(dr.GetOrdinal("FinVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FinVigencia"));
                            acuerdoComercialEscalonado.UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim();
                            acuerdoComercialEscalonado.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                            acuerdoComercialEscalonado.UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim();
                            acuerdoComercialEscalonado.FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion"));
                            acuerdoComercialEscalonado.EstadoRegistro = dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"));
                            acuerdoComercialEscalonado.CodigoCondicion = dr.IsDBNull(dr.GetOrdinal("CodigoCondicion")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCondicion")).Trim();
                            
                            
                            lsDetalletAcuerdoComercialEscalonado.Add(acuerdoComercialEscalonado);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoSucursalConsultaBE acEscalonadoSucursal = new AcuerdoComercialEscalonadoSucursalConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoSucursal.Add(acEscalonadoSucursal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoSucursalTerminalConsultaBE acEscalonadoSucursalTerminal = new AcuerdoComercialEscalonadoSucursalTerminalConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim(),
                                CodigoTerminalPortuario = dr.IsDBNull(dr.GetOrdinal("CodigoTerminalPortuario")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTerminalPortuario")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoSucursalTerminal.Add(acEscalonadoSucursalTerminal);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoRAConsultaBE acEscalonadoRABE = new AcuerdoComercialEscalonadoRAConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoRA = dr.IsDBNull(dr.GetOrdinal("CodigoRA")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRA")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoRA.Add(acEscalonadoRABE);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoPuertoConsultaBE acEscalonadoPuerto = new AcuerdoComercialEscalonadoPuertoConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto")).Trim(),
                                CodigoTipoPuerto = dr.IsDBNull(dr.GetOrdinal("CodigoTipoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoPuerto")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoPuerto.Add(acEscalonadoPuerto);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoClienteBLMasterConsultaBE acEscalonadoClienteBLMaster = new AcuerdoComercialEscalonadoClienteBLMasterConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCliente")).Trim(),
                                CodigoDocumentoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoCliente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialEscalonadoClienteBLMaster.Add(acEscalonadoClienteBLMaster);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoAgenteBLMasterConsultaBE acEscalonadoAgenteBLMaster = new AcuerdoComercialEscalonadoAgenteBLMasterConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoAgente")).Trim(),
                                CodigoDocumentoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoAgente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialEscalonadoAgenteBLMaster.Add(acEscalonadoAgenteBLMaster);
                        }


                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoClienteBLHouseConsultaBE acEscalonadoClienteBLHouse = new AcuerdoComercialEscalonadoClienteBLHouseConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCliente")).Trim(),
                                CodigoDocumentoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoCliente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialEscalonadoClienteBLHouse.Add(acEscalonadoClienteBLHouse);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoAgenteBLHouseConsultaBE acEscalonadoAgenteBLHouse = new AcuerdoComercialEscalonadoAgenteBLHouseConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoAgente")).Trim(),
                                CodigoDocumentoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoDocumentoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoDocumentoAgente")).Trim(),
                                CodigoRol = dr.IsDBNull(dr.GetOrdinal("CodigoRol")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoRol"))
                            };

                            lstAcuerdoComercialEscalonadoAgenteBLHouse.Add(acEscalonadoAgenteBLHouse);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoServicioNaveConsultaBE acEscalonadoServicioNave = new AcuerdoComercialEscalonadoServicioNaveConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoServicio = dr.IsDBNull(dr.GetOrdinal("CodigoServicio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicio")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoServicioNave.Add(acEscalonadoServicioNave);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoServicioBLConsultaBE acEscalonadoServicioBLBE = new AcuerdoComercialEscalonadoServicioBLConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoServicio = dr.IsDBNull(dr.GetOrdinal("CodigoServicio")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicio")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoServicioBL.Add(acEscalonadoServicioBLBE);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoCargaConsultaBE acEscalonadoCarga = new AcuerdoComercialEscalonadoCargaConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoNave = dr.IsDBNull(dr.GetOrdinal("CodigoNave")) ? "" : dr.GetString(dr.GetOrdinal("CodigoNave")).Trim(),
                                NumeroViaje = dr.IsDBNull(dr.GetOrdinal("NumeroViaje")) ? "" : dr.GetString(dr.GetOrdinal("NumeroViaje")).Trim(),
                                PuertoOrigen = dr.IsDBNull(dr.GetOrdinal("PuertoOrigen")) ? "" : dr.GetString(dr.GetOrdinal("PuertoOrigen")).Trim(),
                                PuertoEmbarque = dr.IsDBNull(dr.GetOrdinal("PuertoEmbarque")) ? "" : dr.GetString(dr.GetOrdinal("PuertoEmbarque")).Trim(),
                                PuertoDestino = dr.IsDBNull(dr.GetOrdinal("PuertoDestino")) ? "" : dr.GetString(dr.GetOrdinal("PuertoDestino")).Trim(),
                                DestinoFinal = dr.IsDBNull(dr.GetOrdinal("DestinoFinal")) ? "" : dr.GetString(dr.GetOrdinal("DestinoFinal")).Trim(),
                                CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim(),
                                NumeroBL = dr.IsDBNull(dr.GetOrdinal("NumeroBL")) ? "" : dr.GetString(dr.GetOrdinal("NumeroBL")).Trim(),
                                CodigoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoContenedor")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoCarga.Add(acEscalonadoCarga);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoTarifaConsultaBE acEscalonadoTarifa = new AcuerdoComercialEscalonadoTarifaConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoTarifaEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoTipoDescuento = dr.IsDBNull(dr.GetOrdinal("CodigoTipoDescuento")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoDescuento")).Trim(),
                                //ValorDescuento = dr.IsDBNull(dr.GetOrdinal("ValorDescuento")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("ValorDescuento")),
                                CodigoMonedaAcuerdo = dr.IsDBNull(dr.GetOrdinal("CodigoMonedaAcuerdo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMonedaAcuerdo")).Trim(),
                                MontoAcuerdo = dr.IsDBNull(dr.GetOrdinal("MontoAcuerdo")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("MontoAcuerdo")),
                                CodigoTipoFechaCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoTipoFechaCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoFechaCalculo")).Trim(),
                                DiasDelayCalculo = dr.IsDBNull(dr.GetOrdinal("DiasDelayCalculo")) ? 0 : dr.GetInt32(dr.GetOrdinal("DiasDelayCalculo")),
                                CodigoTipoDiaCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoTipoDiaCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoDiaCalculo")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoTarifa.Add(acEscalonadoTarifa);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoTarifaPeriodoConsultaBE acEscalonadoTarifaPEriodo = new AcuerdoComercialEscalonadoTarifaPeriodoConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoTarifaEscalonado = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor")),
                                CodigoPeriodo = dr.IsDBNull(dr.GetOrdinal("CodigoPeriodo")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoPeriodo")),
                                NumeroDias = dr.IsDBNull(dr.GetOrdinal("NumeroDias")) ? 0 : dr.GetInt32(dr.GetOrdinal("NumeroDias")),
                                Moneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Precio = dr.IsDBNull(dr.GetOrdinal("Precio")) ? 0 : dr.GetDecimal(dr.GetOrdinal("Precio")),
                                CodigoClaseContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClaseContenedor")).Trim(),
                                ClaseContenedor = dr.IsDBNull(dr.GetOrdinal("ClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("ClaseContenedor")).Trim()
                            };

                            lstAcuerdoComercialEscalonadoTarifaPeriodo.Add(acEscalonadoTarifaPEriodo);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            AcuerdoComercialEscalonadoTarifaLigadaConsultaBE acEscalonadoTarifaLigada = new AcuerdoComercialEscalonadoTarifaLigadaConsultaBE()
                            {
                                CodigoAcuerdoComercialEscalonadoTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonadoTarifaLigada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonadoTarifaLigada")),
                                CodigoAcuerdoComercialEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoAcuerdoComercialEscalonado")),
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigadaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigadaLocal")),
                                CodigoConfiguracionTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")).Trim(),
                                Porcentaje = dr.IsDBNull(dr.GetOrdinal("Porcentaje")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Porcentaje")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Monto"))
                            };

                            lstAcuerdoComercialEscalonadoTarifaLigada.Add(acEscalonadoTarifaLigada);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                    foreach (var acEscalonado in lsDetalletAcuerdoComercialEscalonado)
                    {

                        acEscalonado.ListaAcuerdoComercialEscalonadoSucursal = lstAcuerdoComercialEscalonadoSucursal.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoSucursalTerminal = lstAcuerdoComercialEscalonadoSucursalTerminal.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoRA = lstAcuerdoComercialEscalonadoRA.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoPuerto = lstAcuerdoComercialEscalonadoPuerto.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoClienteBLMaster = lstAcuerdoComercialEscalonadoClienteBLMaster.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoAgenteBLMaster = lstAcuerdoComercialEscalonadoAgenteBLMaster.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoClienteBLHouse = lstAcuerdoComercialEscalonadoClienteBLHouse.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoAgenteBLHouse = lstAcuerdoComercialEscalonadoAgenteBLHouse.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoServicioNave = lstAcuerdoComercialEscalonadoServicioNave.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoServicioBL = lstAcuerdoComercialEscalonadoServicioBL.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoTarifaPeriodo = lstAcuerdoComercialEscalonadoTarifaPeriodo.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoCarga = lstAcuerdoComercialEscalonadoCarga.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoTarifa = lstAcuerdoComercialEscalonadoTarifa.Where(x => x.CodigoAcuerdoComercialEscalonado == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();
                        acEscalonado.ListaAcuerdoComercialEscalonadoTarifaLigada = lstAcuerdoComercialEscalonadoTarifaLigada.Where(x => x.CodigoAcuerdoComercialEscalonada == acEscalonado.CodigoAcuerdoComercialEscalonado).ToList();

                    }


                }


            }

            return lsDetalletAcuerdoComercialEscalonado;

        }

        public List<TipoContenedorExternoBE> ConsultarContenedorExternoTodo()
        {
            List<TipoContenedorExternoBE> TipoContenedorExternoList = new List<TipoContenedorExternoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTAR_TIPOCONTENEDOREXTERNO_TODO", conexion, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TipoContenedorExternoBE tipoContenedorExterno = new TipoContenedorExternoBE()
                            {
                                CodigoTipoContenedorExterno = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedorExterno")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTipoContenedorExterno")),
                                CodigoEquivalencia = dr.IsDBNull(dr.GetOrdinal("CodigoEquivalencia")) ? "" : dr.GetString(dr.GetOrdinal("CodigoEquivalencia")),
                                CodigoClaseContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoClaseContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClaseContenedor")),
                                CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor")),
                            };

                            TipoContenedorExternoList.Add(tipoContenedorExterno);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return TipoContenedorExternoList;

        }
        public List<DetalleTarifaEscalonadaBE> ConsultarResumenDetalleTarifaEscalonada(ConsultaDetalleTarifaEscalonadaBE request)
        {
            List<DetalleTarifaEscalonadaBE> lstDetalleTarifaEscalonada = new List<DetalleTarifaEscalonadaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoTarifaEscalonada", request.CodigoTarifaEscalonada);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_DETALLE_TARIFAESCALONADA_RESUMEN", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleTarifaEscalonadaBE detalleTarifaLocal = new DetalleTarifaEscalonadaBE();

                            detalleTarifaLocal.CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada"));
                            detalleTarifaLocal.CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim();
                            detalleTarifaLocal.CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim();
                            detalleTarifaLocal.CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim();
                            detalleTarifaLocal.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim();
                            detalleTarifaLocal.CodigoUnidadCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoUnidadCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUnidadCalculo")).Trim();
                            detalleTarifaLocal.CodigoUsuarioAutorizador = dr.IsDBNull(dr.GetOrdinal("CodigoUsuarioAutorizador")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUsuarioAutorizador")).Trim();

                            detalleTarifaLocal.InicioVigencia = dr.IsDBNull(dr.GetOrdinal("InicioVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("InicioVigencia"));
                            detalleTarifaLocal.FinVigencia = dr.IsDBNull(dr.GetOrdinal("FinVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FinVigencia"));
                            detalleTarifaLocal.CodigoTipoFechaCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoTipoFechaCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoFechaCalculo")).Trim();
                            detalleTarifaLocal.DiasDelayCalculo = dr.IsDBNull(dr.GetOrdinal("DiasDelayCalculo")) ? 0 : dr.GetInt32(dr.GetOrdinal("DiasDelayCalculo"));
                            detalleTarifaLocal.CodigoTipoDiaCalculo = dr.IsDBNull(dr.GetOrdinal("CodigoTipoDiaCalculo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoDiaCalculo")).Trim();

                            detalleTarifaLocal.UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")).Trim();
                            detalleTarifaLocal.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                            detalleTarifaLocal.UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")).Trim();
                            detalleTarifaLocal.FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion"));
                            detalleTarifaLocal.EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"));

                            lstDetalleTarifaEscalonada.Add(detalleTarifaLocal);
                        }

                    }
                }

                return lstDetalleTarifaEscalonada;

            }
        }

        public List<ReporteTarifaLocalBE> ReporteTarifaLocal(ConsultaReporteTarifaLocalBE request)
        {
            List<ReporteTarifaLocalBE> lstReporteTarifaLocal = new List<ReporteTarifaLocalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoTarifaLocal", request.CodigoTarifaLocal == null ? 0 : request.CodigoTarifaLocal);
                parametrosIn.Add("@CodigoLinea", string.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea);
                parametrosIn.Add("@CodigoMoneda", string.IsNullOrEmpty(request.CodigoMoneda) ? string.Empty : request.CodigoMoneda);
                parametrosIn.Add("@CodigoSucursal", string.IsNullOrEmpty(request.CodigoSucursal) ? string.Empty : request.CodigoSucursal);


                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_REPORTE_TARIFALOCAL", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ReporteTarifaLocalBE reporteTarifaLocal = new ReporteTarifaLocalBE();

                            reporteTarifaLocal.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea"));
                            reporteTarifaLocal.CodigoTarifaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLocal"));
                            reporteTarifaLocal.CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto"));
                            reporteTarifaLocal.CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa"));
                            reporteTarifaLocal.CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda"));
                            reporteTarifaLocal.Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? 0 : dr.GetDecimal(dr.GetOrdinal("Monto"));
                            reporteTarifaLocal.CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal"));
                            reporteTarifaLocal.VigenciaDesde = dr.IsDBNull(dr.GetOrdinal("VigenciaDesde")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("VigenciaDesde"));
                            reporteTarifaLocal.VigenciaHasta = dr.IsDBNull(dr.GetOrdinal("VigenciaHasta")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("VigenciaHasta"));
                            reporteTarifaLocal.CodigoTerminalPortuario = dr.IsDBNull(dr.GetOrdinal("CodigoTerminalPortuario")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTerminalPortuario"));
                            reporteTarifaLocal.CodigoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigadaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigadaLocal"));
                            reporteTarifaLocal.CodigoConceptoTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoConceptoTarifaLigada")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConceptoTarifaLigada"));
                            reporteTarifaLocal.CodigoTarifaTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaTarifaLigada")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifaTarifaLigada"));
                            reporteTarifaLocal.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));

                            lstReporteTarifaLocal.Add(reporteTarifaLocal);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstReporteTarifaLocal;

        }

        public List<ReporteTarifaEscalonadaBE> ReporteTarifaEscalonada(ConsultaReporteTarifaEscalonadaBE request)
        {
            List<ReporteTarifaEscalonadaBE> lstReporteTarifaEscalonada = new List<ReporteTarifaEscalonadaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                parametrosIn.Add("@CodigoTarifaEscalonada", request.CodigoTarifaEscalonada == null ? 0 : request.CodigoTarifaEscalonada);
                parametrosIn.Add("@CodigoLinea", string.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea);
                parametrosIn.Add("@CodigoMoneda", string.IsNullOrEmpty(request.CodigoMoneda) ? string.Empty : request.CodigoMoneda);
                parametrosIn.Add("@CodigoSucursal", string.IsNullOrEmpty(request.CodigoSucursal) ? string.Empty : request.CodigoSucursal);


                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_REPORTE_TARIFAESCALONADA", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ReporteTarifaEscalonadaBE reporteTarifaEscalonada = new ReporteTarifaEscalonadaBE();

                            reporteTarifaEscalonada.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea"));
                            reporteTarifaEscalonada.CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto"));
                            reporteTarifaEscalonada.CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa"));
                            reporteTarifaEscalonada.CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda"));
                            reporteTarifaEscalonada.Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? 0 : dr.GetDecimal(dr.GetOrdinal("Monto"));
                            reporteTarifaEscalonada.CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal"));
                            reporteTarifaEscalonada.VigenciaDesde = dr.IsDBNull(dr.GetOrdinal("VigenciaDesde")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("VigenciaDesde"));
                            reporteTarifaEscalonada.VigenciaHasta = dr.IsDBNull(dr.GetOrdinal("VigenciaHasta")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("VigenciaHasta"));
                            reporteTarifaEscalonada.CodigoPeriodo = dr.IsDBNull(dr.GetOrdinal("CodigoPeriodo")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoPeriodo"));
                            reporteTarifaEscalonada.CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor"));
                            reporteTarifaEscalonada.NumeroDias = dr.IsDBNull(dr.GetOrdinal("NumeroDias")) ? 0 : dr.GetInt32(dr.GetOrdinal("NumeroDias"));
                            reporteTarifaEscalonada.CodigoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigadaLocal")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigadaLocal"));
                            reporteTarifaEscalonada.CodigoConceptoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoConceptoTarifaLigadaLocal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConceptoTarifaLigadaLocal"));
                            reporteTarifaEscalonada.CodigoTarifaTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaTarifaLigadaLocal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifaTarifaLigadaLocal"));
                            reporteTarifaEscalonada.MontoLigado = dr.IsDBNull(dr.GetOrdinal("MontoLigado")) ? 0 : dr.GetDecimal(dr.GetOrdinal("MontoLigado"));
                            reporteTarifaEscalonada.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));

                            lstReporteTarifaEscalonada.Add(reporteTarifaEscalonada);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstReporteTarifaEscalonada;

        }

        public List<ContenedoresNoDevueltosBE> ConsultarContenedoresNoDevueltos(ConsultaContenedorNoDevueltoBE request)
        {
            List<ContenedoresNoDevueltosBE> liquidacionList = new List<ContenedoresNoDevueltosBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("TRAMARSA")))
            //using (SqlConnection conexion = new SqlConnection("Data Source=10.72.20.27;Initial Catalog=TRAMARSA;User ID=usrAntp;Password=6;MultipleActiveResultSets=True"))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();
                Dictionary<string, object> parametrosOut = new Dictionary<string, object>();

                parametrosIn.Add("@CodCli", (object)request.CodigoCliente ?? DBNull.Value);
                parametrosIn.Add("@CodLin", (object)request.CodigoLinea ?? DBNull.Value);
                parametrosIn.Add("@Nro_Bl", (object)request.NroBL ?? DBNull.Value);
                parametrosIn.Add("@CodCtn", (object)request.CodigoContenedor ?? DBNull.Value);
                parametrosIn.Add("@FecDesde", (object)request.Desde ?? DBNull.Value);
                parametrosIn.Add("@FecHasta", (object)request.Hasta ?? DBNull.Value);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_Consulta_AlertasLiquidacionesNoDevueltos", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ContenedoresNoDevueltosBE cliente = new ContenedoresNoDevueltosBE()
                            {
                                CodigoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoAgente")),
                                NombreSucursal = dr.IsDBNull(dr.GetOrdinal("NombreSucursal")) ? "" : dr.GetString(dr.GetOrdinal("NombreSucursal")),
                                NumeroTransaccion = dr.IsDBNull(dr.GetOrdinal("NumeroTransaccion")) ? 0 : dr.GetInt32(dr.GetOrdinal("NumeroTransaccion")),
                                FechaTransaccion = dr.IsDBNull(dr.GetOrdinal("FechaTransaccion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaTransaccion")),
                                CodigoNave = dr.IsDBNull(dr.GetOrdinal("CodigoNave")) ? "" : dr.GetString(dr.GetOrdinal("CodigoNave")),
                                NombreNave = dr.IsDBNull(dr.GetOrdinal("NombreNave")) ? "" : dr.GetString(dr.GetOrdinal("NombreNave")),
                                NumeroViaje = dr.IsDBNull(dr.GetOrdinal("NumeroViaje")) ? "" : dr.GetString(dr.GetOrdinal("NumeroViaje")),
                                PuertoOrigen = dr.IsDBNull(dr.GetOrdinal("PuertoOrigen")) ? "" : dr.GetString(dr.GetOrdinal("PuertoOrigen")),
                                PuertoEmbarque = dr.IsDBNull(dr.GetOrdinal("PuertoEmbarque")) ? "" : dr.GetString(dr.GetOrdinal("PuertoEmbarque")),
                                PuertoDescarga = dr.IsDBNull(dr.GetOrdinal("PuertoDescarga")) ? "" : dr.GetString(dr.GetOrdinal("PuertoDescarga")),
                                PuertoFinal = dr.IsDBNull(dr.GetOrdinal("PuertoFinal")) ? "" : dr.GetString(dr.GetOrdinal("PuertoFinal")),
                                CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")),
                                NumeroBL = dr.IsDBNull(dr.GetOrdinal("NumeroBL")) ? "" : dr.GetString(dr.GetOrdinal("NumeroBL")),
                                Consignatario = dr.IsDBNull(dr.GetOrdinal("Consignatario")) ? "" : dr.GetString(dr.GetOrdinal("Consignatario")),
                                Notificante = dr.IsDBNull(dr.GetOrdinal("Notificante")) ? "" : dr.GetString(dr.GetOrdinal("Notificante")),
                                CodigoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoContenedor")),
                                FechaIDP = dr.IsDBNull(dr.GetOrdinal("FecIDP")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FecIDP")),
                                UDL = dr.IsDBNull(dr.GetOrdinal("UDL")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("UDL")),
                                DiasSobrantes = dr.IsDBNull(dr.GetOrdinal("DiasSob")) ? 0 : dr.GetInt32(dr.GetOrdinal("DiasSob")),
                                FechaArribo = dr.IsDBNull(dr.GetOrdinal("FechaArribo")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaArribo")),
                                SerivicioBL = dr.IsDBNull(dr.GetOrdinal("ServicioBL")) ? "" : dr.GetString(dr.GetOrdinal("ServicioBL")),
                                TipoContenedor = dr.IsDBNull(dr.GetOrdinal("TipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("TipoContenedor")),
                            };

                            liquidacionList.Add(cliente);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return liquidacionList;
        }

        public List<CatalogoTablasBE> ConsultarCatalogoTablas()
        {
            List<CatalogoTablasBE> lstCatalogoTablas = new List<CatalogoTablasBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                using (SqlCommand cmd = SqlHelper.CreateCommand("USP_CONSULTA_CATALOGOTABLAS", conexion))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            CatalogoTablasBE CatalogoTablas = new CatalogoTablasBE()
                            {
                                IdCatalogo = dr.IsDBNull(dr.GetOrdinal("IdCatalogo")) ? 0 : dr.GetInt32(dr.GetOrdinal("IdCatalogo")),
                                Codigo = dr.IsDBNull(dr.GetOrdinal("Codigo")) ? "" : dr.GetString(dr.GetOrdinal("Codigo")),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")),
                                CodigoTabla = dr.IsDBNull(dr.GetOrdinal("CodigoTabla")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTabla")),
                                UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion")),
                                FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion")),
                                UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion")),
                                FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion")),
                                EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"))
                            };

                            lstCatalogoTablas.Add(CatalogoTablas);
                        }

                        SqlHelper.CloseConnection(conexion);
                    }

                }
            }

            return lstCatalogoTablas;

        }


        public List<DetalleCatalogoTablasBE> ConsultarDetalleCatalogoTablas(ConsultaDetalleCatalogoTablasBE request)
        {
            List<DetalleCatalogoTablasBE> lstDetalleCatalogoTablas = new List<DetalleCatalogoTablasBE>();
            List<DetalleCatalogoBE> lstDetalleCatalogo = new List<DetalleCatalogoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@IdCatalogo", request.IdCatalogo);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTA_DETALLECATALOGOTABLAS", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            DetalleCatalogoTablasBE catalogoTablas = new DetalleCatalogoTablasBE();

                            catalogoTablas.IdCatalogo = dr.IsDBNull(dr.GetOrdinal("IdCatalogo")) ? 0 : dr.GetInt32(dr.GetOrdinal("IdCatalogo"));
                            catalogoTablas.Codigo = dr.IsDBNull(dr.GetOrdinal("Codigo")) ? "" : dr.GetString(dr.GetOrdinal("Codigo"));
                            catalogoTablas.Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre"));
                            catalogoTablas.Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion"));
                            catalogoTablas.CodigoTabla = dr.IsDBNull(dr.GetOrdinal("CodigoTabla")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTabla"));
                            catalogoTablas.UsuarioCreacion = dr.IsDBNull(dr.GetOrdinal("UsuarioCreacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioCreacion"));
                            catalogoTablas.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                            catalogoTablas.UsuarioActualizacion = dr.IsDBNull(dr.GetOrdinal("UsuarioActualizacion")) ? "" : dr.GetString(dr.GetOrdinal("UsuarioActualizacion"));
                            catalogoTablas.FechaHoraActualizacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraActualizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraActualizacion"));
                            catalogoTablas.EstadoRegistro = dr.IsDBNull(dr.GetOrdinal("EstadoRegistro")) ? false : dr.GetBoolean(dr.GetOrdinal("EstadoRegistro"));
                            lstDetalleCatalogoTablas.Add(catalogoTablas);
                        }

                        dr.NextResult();

                        while (dr.Read())
                        {
                            DetalleCatalogoBE detalleCatalogo = new DetalleCatalogoBE()
                            {
                                IdCatalogo = dr.IsDBNull(dr.GetOrdinal("IdCatalogo")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("IdCatalogo")),
                                Nombre = dr.IsDBNull(dr.GetOrdinal("Nombre")) ? "" : dr.GetString(dr.GetOrdinal("Nombre")).Trim(),
                                Codigo = dr.IsDBNull(dr.GetOrdinal("Codigo")) ? "" : dr.GetString(dr.GetOrdinal("Codigo")).Trim(),
                                Label = dr.IsDBNull(dr.GetOrdinal("Label")) ? "" : dr.GetString(dr.GetOrdinal("Label")).Trim(),
                                Descripcion = dr.IsDBNull(dr.GetOrdinal("Descripcion")) ? "" : dr.GetString(dr.GetOrdinal("Descripcion")).Trim(),
                                Mnemonico = dr.IsDBNull(dr.GetOrdinal("Mnemonico")) ? "" : dr.GetString(dr.GetOrdinal("Mnemonico")).Trim(),
                                Valor1 = dr.IsDBNull(dr.GetOrdinal("Val1")) ? "" : dr.GetString(dr.GetOrdinal("Val1")).Trim(),
                                Valor2 = dr.IsDBNull(dr.GetOrdinal("Val2")) ? "" : dr.GetString(dr.GetOrdinal("Val2")).Trim()
                            };

                            lstDetalleCatalogo.Add(detalleCatalogo);
                        }


                        SqlHelper.CloseConnection(conexion);
                    }

                    foreach (var detalle in lstDetalleCatalogoTablas)
                    {
                        detalle.ListaDetalleCatalogoTablas = lstDetalleCatalogo.Where(x => x.IdCatalogo == detalle.IdCatalogo).ToList();
                    }


                }


            }

            return lstDetalleCatalogoTablas;

        }

        public List<TarifaEscalonadaBE> ConsultarTarifaEscalonadaXConcepto(string codigoConcepto, string codigoTarifa)
        {
            List<TarifaEscalonadaBE> tarifaEscalonadaBEList = new List<TarifaEscalonadaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoConcepto", codigoConcepto);
                parametrosIn.Add("@CodigoTarifa", codigoTarifa);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_OBTENER_TARIFAESCALONADAPORCONCEPTO", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaEscalonadaBE tarifaEscalonada = new TarifaEscalonadaBE()
                            {
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim(),
                                CodigoTarifa = dr.IsDBNull(dr.GetOrdinal("CodigoTarifa")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTarifa")).Trim(),
                                CodigoConcepto = dr.IsDBNull(dr.GetOrdinal("CodigoConcepto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConcepto")).Trim(),
                            };

                            tarifaEscalonadaBEList.Add(tarifaEscalonada);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return tarifaEscalonadaBEList;
        }

        public List<TarifaEscalonadaLigadaBE> ConsultarTarifaEscalonadaLigada(int codigoTarifaEscalonada)
        {
            List<TarifaEscalonadaLigadaBE> tarifaLigadaBEList = new List<TarifaEscalonadaLigadaBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@codigoTarifaEscalonada", codigoTarifaEscalonada);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("usp_TarifaEscalonadaLigadaXCodigoTarifaEscalonada", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            TarifaEscalonadaLigadaBE tarifaescalonadaLigadaBE = new TarifaEscalonadaLigadaBE()
                            {
                                CodigoTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigada")),
                                CodigoTarifaLigadaLocal = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaLigadaLocal")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaLigadaLocal")),
                                CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? 0 : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                CodigoConfiguracionTarifaLigada = dr.IsDBNull(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")) ? "" : dr.GetString(dr.GetOrdinal("CodigoConfiguracionTarifaLigada")).Trim(),
                                Porcentaje = dr.IsDBNull(dr.GetOrdinal("Porcentaje")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Porcentaje")),
                                CodigoMoneda = dr.IsDBNull(dr.GetOrdinal("CodigoMoneda")) ? "" : dr.GetString(dr.GetOrdinal("CodigoMoneda")).Trim(),
                                Monto = dr.IsDBNull(dr.GetOrdinal("Monto")) ? new Nullable<decimal>() : dr.GetDecimal(dr.GetOrdinal("Monto"))
                            };

                            tarifaLigadaBEList.Add(tarifaescalonadaLigadaBE);
                        }
                    }
                    SqlHelper.CloseConnection(conexion);
                }
            }

            return tarifaLigadaBEList;
        }

        public List<PuertoGrupoExternoBE> ConsultaGrupoPuertoExterno(ConsultaPuertosGrupoExternoBE request)
        {
            List<PuertoGrupoExternoBE> lstPuertoGExterno = new List<PuertoGrupoExternoBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoGrupoPuerto", request.CodigoGrupoPuerto);
                parametrosIn.Add("@NombreGrupoPuerto", string.IsNullOrEmpty(request.NombreGrupoPuerto) ? string.Empty : request.NombreGrupoPuerto);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_PUERTO_GRUPOPUERTOEXTERNO", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            PuertoGrupoExternoBE puertoGExterno = new PuertoGrupoExternoBE()
                            {
                                Codigo = dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto"))
                            };

                            lstPuertoGExterno.Add(puertoGExterno);
                        }
                    }
                    SqlHelper.CloseConnection(conexion);
                }
            }

            return lstPuertoGExterno;
        }
        
            public List<ReporteAcuerdoComercialLocalBE> ReporteAcuerdoComercialLocal(ConsultaReporteAcuerdoComercialLocalBE request)
        {
            List<ReporteAcuerdoComercialLocalBE> lstReporteACLocal = new List<ReporteAcuerdoComercialLocalBE>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {

                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoLinea", string.IsNullOrEmpty(request.CodigoLinea) ? string.Empty : request.CodigoLinea);
                parametrosIn.Add("@CodigoMoneda", string.IsNullOrEmpty(request.CodigoMoneda) ? string.Empty : request.CodigoMoneda);
                parametrosIn.Add("@CodigoSucursal", string.IsNullOrEmpty(request.CodigoSucursal) ? string.Empty : request.CodigoSucursal);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_REPORTE_ACLOCAL", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            ReporteAcuerdoComercialLocalBE aclocal = new ReporteAcuerdoComercialLocalBE();
                            
                                //aclocal.CodigoTarifaEscalonada = dr.IsDBNull(dr.GetOrdinal("CodigoTarifaEscalonada")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("CodigoTarifaEscalonada")),
                                //aclocal.CodigoRegimen = dr.IsDBNull(dr.GetOrdinal("CodigoRegimen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRegimen")).Trim(),

                                aclocal.CodigoLinea = dr.IsDBNull(dr.GetOrdinal("CodigoLinea")) ? "" : dr.GetString(dr.GetOrdinal("CodigoLinea")).Trim();
                                aclocal.CodigoSucursal = dr.IsDBNull(dr.GetOrdinal("CodigoSucursal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoSucursal")).Trim();
                                aclocal.CodigoRA = dr.IsDBNull(dr.GetOrdinal("CodigoRA")) ? "" : dr.GetString(dr.GetOrdinal("CodigoRA")).Trim();
                                aclocal.CodigoPuertoOrigen = dr.IsDBNull(dr.GetOrdinal("CodigoPuertoOrigen")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuertoOrigen")).Trim();
                                aclocal.CodigoPuertoDestino = dr.IsDBNull(dr.GetOrdinal("CodigoPuertoDestino")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuertoDestino")).Trim();
                                aclocal.CodigoPuertoEmbarque = dr.IsDBNull(dr.GetOrdinal("CodigoPuertoEmbarque")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuertoEmbarque")).Trim();
                                aclocal.CodigoPuertoFinal = dr.IsDBNull(dr.GetOrdinal("CodigoPuertoFinal")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuertoFinal")).Trim();
                                aclocal.CodigoCliente = dr.IsDBNull(dr.GetOrdinal("CodigoCliente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoCliente")).Trim();
                                aclocal.TipoCliente = dr.IsDBNull(dr.GetOrdinal("TipoCliente")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("TipoCliente"));
                                aclocal.CodigoAgente = dr.IsDBNull(dr.GetOrdinal("CodigoAgente")) ? "" : dr.GetString(dr.GetOrdinal("CodigoAgente")).Trim();
                                aclocal.TipoAgente = dr.IsDBNull(dr.GetOrdinal("TipoAgente")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("TipoAgente"));
                                aclocal.CodigoServicioNave = dr.IsDBNull(dr.GetOrdinal("CodigoServicioNave")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicioNave")).Trim();
                                aclocal.CodigoServicioBL = dr.IsDBNull(dr.GetOrdinal("CodigoServicioBL")) ? "" : dr.GetString(dr.GetOrdinal("CodigoServicioBL")).Trim();
                                aclocal.Mercancia = dr.IsDBNull(dr.GetOrdinal("Mercancia")) ? "" : dr.GetString(dr.GetOrdinal("Mercancia")).Trim();
                                aclocal.CodigoTipoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoTipoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoTipoContenedor")).Trim();
                                aclocal.NumeroBLMaster = dr.IsDBNull(dr.GetOrdinal("NumeroBLMaster")) ? "" : dr.GetString(dr.GetOrdinal("NumeroBLMaster")).Trim();
                                aclocal.CodigoContenedor = dr.IsDBNull(dr.GetOrdinal("CodigoContenedor")) ? "" : dr.GetString(dr.GetOrdinal("CodigoContenedor")).Trim();
                                aclocal.NumeroBLHijo = dr.IsDBNull(dr.GetOrdinal("NumeroBLHijo")) ? "" : dr.GetString(dr.GetOrdinal("NumeroBLHijo")).Trim();
                                aclocal.CodigoClienteHijo = dr.IsDBNull(dr.GetOrdinal("CodigoClienteHijo")) ? "" : dr.GetString(dr.GetOrdinal("CodigoClienteHijo")).Trim();
                                aclocal.TipoClienteHijo = dr.IsDBNull(dr.GetOrdinal("TipoClienteHijo")) ? new Nullable<int>() : dr.GetInt32(dr.GetOrdinal("TipoClienteHijo"));
                                aclocal.NroBkn = dr.IsDBNull(dr.GetOrdinal("NroBkn")) ? "" : dr.GetString(dr.GetOrdinal("NroBkn")).Trim();
                                aclocal.CodigoUsuarioAutorizador = dr.IsDBNull(dr.GetOrdinal("CodigoUsuarioAutorizador")) ? "" : dr.GetString(dr.GetOrdinal("CodigoUsuarioAutorizador"));
                                aclocal.FechaAutorizacion = dr.IsDBNull(dr.GetOrdinal("FechaAutorizacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaAutorizacion"));
                                aclocal.FechaHoraCreacion = dr.IsDBNull(dr.GetOrdinal("FechaHoraCreacion")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FechaHoraCreacion"));
                                aclocal.InicioVigencia = dr.IsDBNull(dr.GetOrdinal("InicioVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("InicioVigencia"));
                                aclocal.FinVigencia = dr.IsDBNull(dr.GetOrdinal("FinVigencia")) ? new Nullable<DateTime>() : dr.GetDateTime(dr.GetOrdinal("FinVigencia"));
                            

                            lstReporteACLocal.Add(aclocal);
                        }
                        SqlHelper.CloseConnection(conexion);
                    }
                }
            }

            return lstReporteACLocal;
        }

        public List<string> ConsultaDetalleTipoContenedorExterno(string rateGroupName)
        {
            List<string> rates = new List<string>();

            using (SqlConnection conexion = new SqlConnection(ContextoParaBaseDatos.DecryptedConnectionString("AcuerdoComercialAGMADB")))
            {
                Dictionary<string, object> parametrosIn = new Dictionary<string, object>();

                parametrosIn.Add("@CodigoTipoContenedorExternoDetalle", 0);
                parametrosIn.Add("@CodigoTipoContenedorExterno", 0);
                parametrosIn.Add("@CodigoEquivalencia", rateGroupName);

                using (SqlCommand cmd = SqlHelper.CreateCommandWithParameters("USP_CONSULTAR_DETALLETIPOCONTENEDOREXTERNO", conexion, parametrosIn, true))
                {
                    using (IDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            rates.Add(dr.IsDBNull(dr.GetOrdinal("CodigoPuerto")) ? "" : dr.GetString(dr.GetOrdinal("CodigoPuerto")));
                        }
                    }
                    SqlHelper.CloseConnection(conexion);
                }
            }

            return rates;

        }



    }
}

